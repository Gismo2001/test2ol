{"version":3,"file":"index-1LAFa-We.js","sources":["../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/asserts.js","../../node_modules/ol/math.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/string.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/transform.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/View.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/size.js","../../node_modules/ol/style/Image.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../../node_modules/ol/color.js","../../node_modules/ol/has.js","../../node_modules/ol/dom.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/css.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/Map.js","../../node_modules/ol/Feature.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/format/JSONFeature.js","../../node_modules/ol/format/GeoJSON.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/Overlay.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/render/canvas/ZIndexContext.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/interaction/Draw.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/common.js","../../node_modules/ol/uri.js","../../node_modules/ol/source/wms.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/source/TileWMS.js","../../node_modules/ol/webgl.js","../../node_modules/ol/webgl/Buffer.js","../../node_modules/ol/webgl/ContextEventType.js","../../node_modules/ol/webgl/PostProcessingPass.js","../../node_modules/ol/vec/mat4.js","../../node_modules/ol/webgl/Helper.js","../../node_modules/ol/renderer/webgl/Layer.js","../../node_modules/ol/webgl/RenderTarget.js","../../node_modules/ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../../node_modules/ol/render/webgl/utils.js","../../node_modules/ol/worker/webgl.js","../../node_modules/ol/renderer/webgl/worldUtil.js","../../node_modules/ol/renderer/webgl/PointsLayer.js","../../node_modules/ol/expr/gpu.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/webgl/ShaderBuilder.js","../../node_modules/ol/layer/Heatmap.js","../../node_modules/ol/renderer/canvas/VectorTileLayer.js","../../node_modules/ol/layer/VectorTile.js","../../node_modules/ol/control/ZoomToExtent.js","../../node_modules/ol-ext/util/input/Base.js","../../node_modules/ol-ext/util/input/Checkbox.js","../../node_modules/ol-ext/util/input/Switch.js","../../node_modules/ol-ext/util/input/Radio.js","../../node_modules/ol-ext/util/element.js","../../node_modules/ol-ext/control/LayerSwitcher.js","../../extStyle.js","../../myFunc.js","../../main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.0.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise (WebGL only).\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise (WebGL only).\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} T\n * @typedef {T extends import(\"../render/Feature.js\").default ? typeof import(\"../render/Feature.js\").default : typeof import(\"../Feature.js\").default} FeatureToFeatureClass<T>\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends import(\"../render/Feature.js\").default ? import(\"../render/Feature.js\").default : import(\"../Feature.js\").default} FeatureClassToFeature<T>\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Array<Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = [];\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    this.deferredZIndexContexts_.forEach((zIndexContexts) => {\n      zIndexContexts.forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    });\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const declutter = this.getLayer().getDeclutter();\n    if (!declutter) {\n      return;\n    }\n    this.setupCompositionContext_(); //FIXME Check if this works, or if we need to defer something.\n    this.renderWorlds(this.replayGroup_, frameState, true);\n    this.releaseCompositionContext_();\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    this.replayGroup_.renderDeferred();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0.5, -0.5, distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        !!this.frameState?.declutter,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const zIndexKeys = executorGroupZIndexContexts\n      .map((zIndexContext) => Object.keys(zIndexContext))\n      .flat()\n      .sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        if (declutter) {\n          tileClipContext = new ZIndexContext();\n          clipContext = tileClipContext.getContext();\n        }\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      ),\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/** Vanilla JS geographic inputs\r\n * color, size, width, font, symboles, dash, arrow, pattern\r\n */\r\nimport ol_Object from 'ol/Object.js'\r\n\r\n/** Abstract base class; normally only used for creating subclasses and not instantiated in apps.    \r\n * @constructor\r\n * @extends {ol_Object}\r\n * @param {*} options\r\n *  @param {Element} [options.input] input element, if none create one\r\n *  @param {string} [options.type] input type, if no input\r\n *  @param {number} [options.min] input min, if no input\r\n *  @param {number} [options.max] input max, if no input\r\n *  @param {number} [options.step] input step, if no input\r\n *  @param {string|number} [options.val] input value\r\n *  @param {boolean} [options.checked] check input\r\n *  @param {boolean} [options.hidden] the input is display:none\r\n *  @param {boolean} [options.disabled] disable input\r\n *  @param {Element} [options.parent] parent element, if no input\r\n */\r\nvar ol_ext_input_Base = class olextinputBase extends ol_Object {\r\n  constructor(options) {\r\n    options = options || {};\r\n    super();\r\n\r\n    var input = this.input = options.input;\r\n    if (!input) {\r\n      input = this.input = document.createElement('INPUT');\r\n      if (options.type)\r\n        input.setAttribute('type', options.type);\r\n      if (options.min !== undefined)\r\n        input.setAttribute('min', options.min);\r\n      if (options.max !== undefined)\r\n        input.setAttribute('max', options.max);\r\n      if (options.step !== undefined)\r\n        input.setAttribute('step', options.step);\r\n      if (options.parent)\r\n        options.parent.appendChild(input);\r\n    }\r\n    if (options.disabled)\r\n      input.disabled = true;\r\n    if (options.checked !== undefined)\r\n      input.checked = !!options.checked;\r\n    if (options.val !== undefined)\r\n      input.value = options.val;\r\n    if (options.hidden)\r\n      input.style.display = 'none';\r\n    input.addEventListener('focus', function () {\r\n      if (this.element)\r\n        this.element.classList.add('ol-focus');\r\n    }.bind(this));\r\n    var tout;\r\n    input.addEventListener('focusout', function () {\r\n      if (this.element) {\r\n        if (tout)\r\n          clearTimeout(tout);\r\n        tout = setTimeout(function () {\r\n          this.element.classList.remove('ol-focus');\r\n        }.bind(this), 0);\r\n      }\r\n    }.bind(this));\r\n  }\r\n  /** Listen to drag event\r\n   * @param {Element} elt\r\n   * @param {function} cback when draggin on the element\r\n   * @private\r\n   */\r\n  _listenDrag(elt, cback) {\r\n    var handle = function (e) {\r\n      this.moving = true;\r\n      this.element.classList.add('ol-moving');\r\n      var listen = function (e) {\r\n        if (e.type === 'pointerup') {\r\n          document.removeEventListener('pointermove', listen);\r\n          document.removeEventListener('pointerup', listen);\r\n          document.removeEventListener('pointercancel', listen);\r\n          setTimeout(function () {\r\n            this.moving = false;\r\n            this.element.classList.remove('ol-moving');\r\n          }.bind(this));\r\n        }\r\n        if (e.target === elt)\r\n          cback(e);\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }.bind(this);\r\n      document.addEventListener('pointermove', listen, false);\r\n      document.addEventListener('pointerup', listen, false);\r\n      document.addEventListener('pointercancel', listen, false);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }.bind(this);\r\n    elt.addEventListener('mousedown', handle, false);\r\n    elt.addEventListener('touchstart', handle, false);\r\n  }\r\n  /** Set the current value\r\n   */\r\n  setValue(v) {\r\n    if (v !== undefined)\r\n      this.input.value = v;\r\n    this.input.dispatchEvent(new Event('change'));\r\n  }\r\n  /** Get the current getValue\r\n   * @returns {string}\r\n   */\r\n  getValue() {\r\n    return this.input.value;\r\n  }\r\n  /** Get the input element\r\n   * @returns {Element}\r\n   */\r\n  getInputElement() {\r\n    return this.input;\r\n  }\r\n}\r\n\r\nexport default ol_ext_input_Base\r\n","import ol_ext_input_Base from './Base.js'\r\n\r\n/** Checkbox input\r\n * @constructor\r\n * @extends {ol_ext_input_Base}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element|string} [options.html] label content\r\n *  @param {string} [options.after] label garnish (placed after)\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n *  @param {boolean} [options.autoClose=true]\r\n *  @param {boolean} [options.visible=false] display the input\r\n */\r\nvar ol_ext_input_Checkbox = class olextinputCheckbox extends ol_ext_input_Base {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    var label = this.element = document.createElement('LABEL');\r\n    if (options.html instanceof Element)\r\n      label.appendChild(options.html);\r\n    else if (options.html !== undefined)\r\n      label.innerHTML = options.html;\r\n    label.className = ('ol-ext-check ol-ext-checkbox ' + (options.className || '')).trim();\r\n\r\n    if (this.input.parentNode)\r\n      this.input.parentNode.insertBefore(label, this.input);\r\n    label.appendChild(this.input);\r\n    label.appendChild(document.createElement('SPAN'));\r\n    if (options.after) {\r\n      label.appendChild(document.createTextNode(options.after));\r\n    }\r\n\r\n    // Handle change\r\n    this.input.addEventListener('change', function () {\r\n      this.dispatchEvent({ type: 'check', checked: this.input.checked, value: this.input.value });\r\n    }.bind(this));\r\n\r\n  }\r\n  isChecked() {\r\n    return this.input.checked;\r\n  }\r\n}\r\n\r\nexport default ol_ext_input_Checkbox\r\n","import ol_ext_input_Checkbox from './Checkbox.js'\r\n\r\n/** Switch input\r\n * @constructor\r\n * @extends {ol_ext_input_Checkbox}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n */\r\nvar ol_ext_input_Switch = class olextinputSwitch extends ol_ext_input_Checkbox {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    this.element.className = ('ol-ext-toggle-switch ' + (options.className || '')).trim();\r\n  }\r\n};\r\n  \r\nexport default ol_ext_input_Switch\r\n","import ol_ext_input_Checkbox from './Checkbox.js'\r\n\r\n/** Switch input\r\n * @constructor\r\n * @extends {ol_ext_input_Checkbox}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n */\r\nvar ol_ext_input_Radio = class olextinputRadio extends ol_ext_input_Checkbox {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    this.element.className = ('ol-ext-check ol-ext-radio ' + (options.className || '')).trim();\r\n  }\r\n}\r\n  \r\nexport default ol_ext_input_Radio\r\n","/** Vanilla JS helper to manipulate DOM without jQuery\r\n * @see https://github.com/nefe/You-Dont-Need-jQuery\r\n * @see https://plainjs.com/javascript/\r\n * @see http://youmightnotneedjquery.com/\r\n */\r\nimport ol_ext_input_Checkbox from './input/Checkbox.js'\r\nimport ol_ext_input_Switch from './input/Switch.js'\r\nimport ol_ext_input_Radio from './input/Radio.js'\r\n\r\n/** @namespace ol.ext.element */\r\nvar ol_ext_element = {};\r\n\r\n/**\r\n * Create an element\r\n * @param {string} tagName The element tag, use 'TEXT' to create a text node\r\n * @param {*} options\r\n *  @param {string} options.className className The element class name \r\n *  @param {Element} options.parent Parent to append the element as child\r\n *  @param {Element|string} [options.html] Content of the element (if text is not set)\r\n *  @param {string} [options.text] Text content (if html is not set)\r\n *  @param {Element|string} [options.options] when tagName = SELECT a list of options as key:value to add to the select\r\n *  @param {string} options.* Any other attribut to add to the element\r\n */\r\nol_ext_element.create = function (tagName, options) {\r\n  options = options || {};\r\n  var elt;\r\n  // Create text node\r\n  if (tagName === 'TEXT') {\r\n    elt = document.createTextNode(options.html||'');\r\n    if (options.parent) options.parent.appendChild(elt);\r\n  } else {\r\n    // Other element\r\n    elt = document.createElement(tagName);\r\n    if (/button/i.test(tagName)) elt.setAttribute('type', 'button');\r\n    for (var attr in options) {\r\n      switch (attr) {\r\n        case 'className': {\r\n          if (options.className && options.className.trim) elt.setAttribute('class', options.className.trim());\r\n          break;\r\n        }\r\n        case 'text': {\r\n          elt.innerText = options.text;\r\n          break;\r\n        }\r\n        case 'html': {\r\n          if (options.html instanceof Element) elt.appendChild(options.html)\r\n          else if (options.html!==undefined) elt.innerHTML = options.html;\r\n          break;\r\n        }\r\n        case 'parent': {\r\n          if (options.parent) options.parent.appendChild(elt);\r\n          break;\r\n        }\r\n        case 'options': {\r\n          if (/select/i.test(tagName)) {\r\n            for (var i in options.options) {\r\n              ol_ext_element.create('OPTION', {\r\n                html: i,\r\n                value: options.options[i],\r\n                parent: elt          \r\n              })\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'style': {\r\n          ol_ext_element.setStyle(elt, options.style);\r\n          break;\r\n        }\r\n        case 'change':\r\n        case 'click': {\r\n          ol_ext_element.addListener(elt, attr, options[attr]);\r\n          break;\r\n        }\r\n        case 'on': {\r\n          for (var e in options.on) {\r\n            ol_ext_element.addListener(elt, e, options.on[e]);\r\n          }\r\n          break;\r\n        }\r\n        case 'checked': {\r\n          elt.checked = !!options.checked;\r\n          break;\r\n        }\r\n        default: {\r\n          elt.setAttribute(attr, options[attr]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return elt;\r\n};\r\n\r\n/** Create a toggle switch input\r\n * @param {*} options\r\n *  @param {string|Element} options.html\r\n *  @param {string|Element} options.after\r\n *  @param {boolean} options.checked\r\n *  @param {*} [options.on] a list of actions\r\n *  @param {function} [options.click]\r\n *  @param {function} [options.change]\r\n *  @param {Element} options.parent\r\n */\r\nol_ext_element.createSwitch = function (options) {\r\n  var input = ol_ext_element.create('INPUT', {\r\n    type: 'checkbox',\r\n    on: options.on,\r\n    click: options.click,\r\n    change: options.change,\r\n    parent: options.parent\r\n  });\r\n  var opt = Object.assign ({ input: input }, options || {});\r\n  new ol_ext_input_Switch(opt);\r\n  return input;\r\n};\r\n\r\n/** Create a toggle switch input\r\n * @param {*} options\r\n *  @param {string|Element} options.html\r\n *  @param {string|Element} options.after\r\n *  @param {string} [options.name] input name\r\n *  @param {string} [options.type=checkbox] input type: radio or checkbox\r\n *  @param {string} options.value input value\r\n *  @param {*} [options.on] a list of actions\r\n *  @param {function} [options.click]\r\n *  @param {function} [options.change]\r\n *  @param {Element} options.parent\r\n */\r\nol_ext_element.createCheck = function (options) {\r\n  var input = ol_ext_element.create('INPUT', {\r\n    name: options.name,\r\n    type: (options.type==='radio' ? 'radio' : 'checkbox'),\r\n    on: options.on,\r\n    parent: options.parent\r\n  });\r\n  var opt = Object.assign ({ input: input }, options || {});\r\n  if (options.type === 'radio') {\r\n    new ol_ext_input_Radio(opt);\r\n  } else {\r\n    new ol_ext_input_Checkbox(opt);\r\n  }\r\n  return input;\r\n};\r\n\r\n/** Set inner html or append a child element to an element\r\n * @param {Element} element\r\n * @param {Element|string} html Content of the element\r\n */\r\nol_ext_element.setHTML = function(element, html) {\r\n  if (html instanceof Element) element.appendChild(html)\r\n  else if (html!==undefined) element.innerHTML = html;\r\n};\r\n\r\n/** Append text into an elemnt\r\n * @param {Element} element\r\n * @param {string} text text content\r\n */\r\nol_ext_element.appendText = function(element, text) {\r\n  element.appendChild(document.createTextNode(text||''));\r\n};\r\n\r\n/**\r\n * Add a set of event listener to an element\r\n * @param {Element} element\r\n * @param {string|Array<string>} eventType\r\n * @param {function} fn\r\n */\r\nol_ext_element.addListener = function (element, eventType, fn, useCapture ) {\r\n  if (typeof eventType === 'string') eventType = eventType.split(' ');\r\n  eventType.forEach(function(e) {\r\n    element.addEventListener(e, fn, useCapture);\r\n  });\r\n};\r\n\r\n/**\r\n * Add a set of event listener to an element\r\n * @param {Element} element\r\n * @param {string|Array<string>} eventType\r\n * @param {function} fn\r\n */\r\nol_ext_element.removeListener = function (element, eventType, fn) {\r\n  if (typeof eventType === 'string') eventType = eventType.split(' ');\r\n  eventType.forEach(function(e) {\r\n    element.removeEventListener(e, fn);\r\n  });\r\n};\r\n\r\n/**\r\n * Show an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.show = function (element) {\r\n  element.style.display = '';\r\n};\r\n\r\n/**\r\n * Hide an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.hide = function (element) {\r\n  element.style.display = 'none';\r\n};\r\n\r\n/**\r\n * Test if an element is hihdden\r\n * @param {Element} element\r\n * @return {boolean}\r\n */\r\nol_ext_element.hidden = function (element) {\r\n  return ol_ext_element.getStyle(element, 'display') === 'none';\r\n};\r\n\r\n/**\r\n * Toggle an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.toggle = function (element) {\r\n  element.style.display = (element.style.display==='none' ? '' : 'none');\r\n};\r\n\r\n/** Set style of an element\r\n * @param {DOMElement} el the element\r\n * @param {*} st list of style\r\n */\r\nol_ext_element.setStyle = function(el, st) {\r\n  for (var s in st) {\r\n    switch (s) {\r\n      case 'top':\r\n      case 'left':\r\n      case 'bottom':\r\n      case 'right':\r\n      case 'minWidth':\r\n      case 'maxWidth':\r\n      case 'width':\r\n      case 'height': {\r\n        if (typeof(st[s]) === 'number') {\r\n          el.style[s] = st[s]+'px';\r\n        } else {\r\n          el.style[s] = st[s];\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        el.style[s] = st[s];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get style propertie of an element\r\n * @param {DOMElement} el the element\r\n * @param {string} styleProp Propertie name\r\n * @return {*} style value\r\n */\r\nol_ext_element.getStyle = function(el, styleProp) {\r\n  var value, defaultView = (el.ownerDocument || document).defaultView;\r\n  // W3C standard way:\r\n  if (defaultView && defaultView.getComputedStyle) {\r\n    // sanitize property name to css notation\r\n    // (hypen separated words eg. font-Size)\r\n    styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n    value = defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\r\n  } else if (el.currentStyle) { // IE\r\n    // sanitize property name to camelCase\r\n    styleProp = styleProp.replace(/-(\\w)/g, function(str, letter) {\r\n      return letter.toUpperCase();\r\n    });\r\n    value = el.currentStyle[styleProp];\r\n    // convert other units to pixels on IE\r\n    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) { \r\n      return (function(value) {\r\n        var oldLeft = el.style.left, oldRsLeft = el.runtimeStyle.left;\r\n        el.runtimeStyle.left = el.currentStyle.left;\r\n        el.style.left = value || 0;\r\n        value = el.style.pixelLeft + \"px\";\r\n        el.style.left = oldLeft;\r\n        el.runtimeStyle.left = oldRsLeft;\r\n        return value;\r\n      })(value);\r\n    }\r\n  }\r\n  if (/px$/.test(value)) return parseInt(value);\r\n  return value;\r\n};\r\n\r\n/** Get outerHeight of an elemen\r\n * @param {DOMElement} elt\r\n * @return {number}\r\n */\r\nol_ext_element.outerHeight = function(elt) {\r\n  return elt.offsetHeight + ol_ext_element.getStyle(elt, 'marginBottom')\r\n};\r\n\r\n/** Get outerWidth of an elemen\r\n * @param {DOMElement} elt\r\n * @return {number}\r\n */\r\nol_ext_element.outerWidth = function(elt) {\r\n  return elt.offsetWidth + ol_ext_element.getStyle(elt, 'marginLeft')\r\n};\r\n\r\n/** Get element offset rect\r\n * @param {DOMElement} elt\r\n * @return {*} \r\n */\r\nol_ext_element.offsetRect = function(elt) {\r\n  var rect = elt.getBoundingClientRect();\r\n  return {\r\n    top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\r\n    left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0),\r\n    height: rect.height || (rect.bottom - rect.top),\r\n    width: rect.width || (rect.right - rect.left)\r\n  }\r\n};\r\n\r\n/** Get element offset \r\n * @param {ELement} elt\r\n * @returns {Object} top/left offset\r\n */\r\nol_ext_element.getFixedOffset = function(elt) {\r\n  var offset = {\r\n    left:0,\r\n    top:0\r\n  };\r\n  var getOffset = function(parent) {\r\n    if (!parent) return offset;\r\n    // Check position when transform\r\n    if (ol_ext_element.getStyle(parent, 'position') === 'absolute'\r\n      && ol_ext_element.getStyle(parent, 'transform') !== \"none\") {\r\n      var r = parent.getBoundingClientRect();\r\n      offset.left += r.left; \r\n      offset.top += r.top; \r\n      return offset;\r\n    }\r\n    return getOffset(parent.offsetParent)\r\n  }\r\n  return getOffset(elt.offsetParent)\r\n};\r\n\r\n/** Get element offset rect\r\n * @param {DOMElement} elt\r\n * @param {boolean} fixed get fixed position\r\n * @return {Object} \r\n */\r\nol_ext_element.positionRect = function(elt, fixed) {\r\n  var gleft = 0;\r\n  var gtop = 0;\r\n\r\n  var getRect = function( parent ) {\r\n    if (parent) {\r\n      gleft += parent.offsetLeft;\r\n      gtop += parent.offsetTop;\r\n      return getRect(parent.offsetParent);\r\n    } else {\r\n      var r = {\r\n        top: elt.offsetTop + gtop,\r\n        left: elt.offsetLeft + gleft\r\n      };\r\n      if (fixed) {\r\n        r.top -= (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\r\n        r.left -= (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0);\r\n      }\r\n      r.bottom = r.top + elt.offsetHeight;\r\n      r.right = r.top + elt.offsetWidth;\r\n      return r;\r\n    }\r\n  }; \r\n  return getRect(elt.offsetParent);\r\n}\r\n\r\n/** Make a div scrollable without scrollbar.\r\n * On touch devices the default behavior is preserved\r\n * @param {DOMElement} elt\r\n * @param {*} options\r\n *  @param {function} [options.onmove] a function that takes a boolean indicating that the div is scrolling\r\n *  @param {boolean} [options.vertical=false] \r\n *  @param {boolean} [options.animate=true] add kinetic to scroll\r\n *  @param {boolean} [options.mousewheel=false] enable mousewheel to scroll\r\n *  @param {boolean} [options.minibar=false] add a mini scrollbar to the parent element (only vertical scrolling)\r\n * @returns {Object} an object with a refresh function\r\n */\r\nol_ext_element.scrollDiv = function(elt, options) {\r\n  options = options || {};\r\n  var pos = false;\r\n  var speed = 0;\r\n  var d, dt = 0;\r\n\r\n  var onmove = (typeof(options.onmove) === 'function' ? options.onmove : function(){});\r\n  //var page = options.vertical ? 'pageY' : 'pageX';\r\n  var page = options.vertical ? 'screenY' : 'screenX';\r\n  var scroll = options.vertical ? 'scrollTop' : 'scrollLeft';\r\n  var moving = false;\r\n  // Factor scale content / container\r\n  var scale, isbar;\r\n\r\n  // Update the minibar\r\n  var updateCounter = 0;\r\n  var updateMinibar = function() {\r\n    if (scrollbar) {\r\n      updateCounter++;\r\n      setTimeout(updateMinibarDelay);\r\n    }\r\n  }\r\n  var updateMinibarDelay = function() {\r\n    if (scrollbar) {\r\n      updateCounter--;\r\n      // Prevent multi call\r\n      if (updateCounter) return;\r\n      // Container height\r\n      var pheight = elt.clientHeight;\r\n      // Content height\r\n      var height = elt.scrollHeight;\r\n      // Set scrollbar value\r\n      scale = pheight / height;\r\n      scrollbar.style.height = scale * 100 + '%';\r\n      scrollbar.style.top = (elt.scrollTop / height * 100) + '%';\r\n      scrollContainer.style.height = pheight + 'px';\r\n      // No scroll\r\n      if (pheight > height - .5) scrollContainer.classList.add('ol-100pc');\r\n      else scrollContainer.classList.remove('ol-100pc');\r\n    }\r\n  }\r\n  \r\n  // Handle pointer down\r\n  var onPointerDown = function(e) {\r\n    // Prevent scroll\r\n    if (e.target.classList.contains('ol-noscroll')) return;\r\n    // Start scrolling\r\n    moving = false;\r\n    pos = e[page];\r\n    dt = new Date();\r\n    elt.classList.add('ol-move');\r\n    // Prevent elt dragging\r\n    e.preventDefault();\r\n    // Listen scroll\r\n    window.addEventListener('pointermove', onPointerMove);\r\n    ol_ext_element.addListener(window, ['pointerup','pointercancel'], onPointerUp);\r\n  }\r\n\r\n  // Register scroll\r\n  var onPointerMove = function(e) {\r\n    if (pos !== false) {\r\n      var delta = (isbar ? -1/scale : 1) * (pos - e[page]);\r\n      moving = moving || Math.round(delta)\r\n      elt[scroll] += delta;\r\n      d = new Date();\r\n      if (d-dt) {\r\n        speed = (speed + delta / (d - dt))/2;\r\n      }\r\n      pos = e[page];\r\n      dt = d;\r\n      // Tell we are moving\r\n      if (delta) onmove(true);\r\n    } else {\r\n      moving = true;\r\n    }\r\n  };\r\n  \r\n  // Animate scroll\r\n  var animate = function(to) {\r\n    var step = (to>0) ? Math.min(100, to/2) : Math.max(-100, to/2);\r\n    to -= step;\r\n    elt[scroll] += step;\r\n    if (-1 < to && to < 1) {\r\n      if (moving) setTimeout(function() { elt.classList.remove('ol-move'); });\r\n      else elt.classList.remove('ol-move');\r\n      moving = false;\r\n      onmove(false);\r\n    } else {\r\n      setTimeout(function() {\r\n        animate(to);\r\n      }, 40);\r\n    }\r\n  }\r\n  \r\n  // Initialize scroll container for minibar\r\n  var scrollContainer, scrollbar;\r\n  if (options.vertical && options.minibar) {\r\n    var init = function(b) {\r\n      // only once\r\n      elt.removeEventListener('pointermove', init);\r\n      elt.parentNode.classList.add('ol-miniscroll');\r\n      scrollbar = ol_ext_element.create('DIV');\r\n      scrollContainer = ol_ext_element.create('DIV', {\r\n        className: 'ol-scroll',\r\n        html: scrollbar\r\n      });\r\n      elt.parentNode.insertBefore(scrollContainer, elt);\r\n      // Move scrollbar\r\n      scrollbar.addEventListener('pointerdown', function(e) {\r\n        isbar = true;\r\n        onPointerDown(e)\r\n      });\r\n      // Handle mousewheel\r\n      if (options.mousewheel) {\r\n        ol_ext_element.addListener(scrollContainer, \r\n          ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n          function(e) { onMouseWheel(e) }\r\n        );\r\n        ol_ext_element.addListener(scrollbar, \r\n          ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n          function(e) { onMouseWheel(e) }\r\n        );\r\n      }\r\n      // Update on enter\r\n      elt.parentNode.addEventListener('pointerenter', updateMinibar);\r\n      // Update on resize\r\n      window.addEventListener('resize', updateMinibar);\r\n      // Update\r\n      if (b!==false) updateMinibar();\r\n    };\r\n    // Allready inserted in the DOM\r\n    if (elt.parentNode) init(false);\r\n    // or wait when ready\r\n    else elt.addEventListener('pointermove', init);\r\n    // Update on scroll\r\n    elt.addEventListener('scroll', function() {\r\n      updateMinibar();\r\n    });\r\n  }\r\n\r\n  // Enable scroll\r\n  elt.style['touch-action'] = 'none';\r\n  elt.style['overflow'] = 'hidden';\r\n  elt.classList.add('ol-scrolldiv');\r\n  \r\n  // Start scrolling\r\n  ol_ext_element.addListener(elt, ['pointerdown'], function(e) {\r\n    isbar = false;\r\n    onPointerDown(e)\r\n  });\r\n\r\n  // Prevet click when moving...\r\n  elt.addEventListener('click', function(e) {\r\n    if (elt.classList.contains('ol-move')) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, true);\r\n\r\n  // Stop scrolling\r\n  var onPointerUp = function(e) {\r\n    dt = new Date() - dt;\r\n    if (dt>100 || isbar) {\r\n      // User stop: no speed\r\n      speed = 0;\r\n    } else if (dt>0) {\r\n      // Calculate new speed\r\n      speed = ((speed||0) + (pos - e[page]) / dt) / 2;\r\n    }\r\n    animate(options.animate===false ? 0 : speed*200);\r\n    pos = false;\r\n    speed = 0;\r\n    dt = 0;\r\n    // Add class to handle click (on iframe / double-click)\r\n    if (!elt.classList.contains('ol-move')) {\r\n      elt.classList.add('ol-hasClick')\r\n      setTimeout(function() { elt.classList.remove('ol-hasClick'); }, 500);\r\n    } else {\r\n      elt.classList.remove('ol-hasClick');\r\n    }\r\n    isbar = false;\r\n    window.removeEventListener('pointermove', onPointerMove)\r\n    ol_ext_element.removeListener(window, ['pointerup','pointercancel'], onPointerUp);\r\n  };\r\n\r\n  // Handle mousewheel\r\n  var onMouseWheel = function(e) {\r\n    var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\r\n    elt.classList.add('ol-move');\r\n    elt[scroll] -= delta*30;\r\n    elt.classList.remove('ol-move');\r\n    return false;\r\n  }\r\n  if (options.mousewheel) { // && !elt.classList.contains('ol-touch')) {\r\n    ol_ext_element.addListener(elt, \r\n      ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n      onMouseWheel\r\n    );\r\n  }\r\n\r\n  return { \r\n    refresh: updateMinibar\r\n  }\r\n};\r\n\r\n/** Dispatch an event to an Element \r\n * @param {string} eventName\r\n * @param {Element} element\r\n */\r\nol_ext_element.dispatchEvent = function (eventName, element) {\r\n  var event;\r\n  try {\r\n    event = new CustomEvent(eventName);\r\n  } catch(e) {\r\n    // Try customevent on IE\r\n    event = document.createEvent(\"CustomEvent\");\r\n    event.initCustomEvent(eventName, true, true, {});\r\n  }\r\n  element.dispatchEvent(event);\r\n};\r\n\r\nexport default ol_ext_element\r\n","/*\tCopyright (c) 2015 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable.js'\r\nimport ol_control_Control from 'ol/control/Control.js'\r\nimport ol_layer_Tile from 'ol/layer/Tile.js'\r\nimport ol_layer_Vector from 'ol/layer/Vector.js'\r\nimport ol_layer_VectorTile from 'ol/layer/VectorTile.js'\r\n// ol < 6 compatibility VectorImage is not defined\r\n// import ol_layer_VectorImage from 'ol/layer/VectorImage'\r\nimport ol_layer_Image from 'ol/layer/Image.js'\r\nimport ol_layer_Heatmap from 'ol/layer/Heatmap.js'\r\nimport {intersects as ol_extent_intersects} from 'ol/extent.js'\r\n\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** Layer Switcher Control.\r\n * @fires select\r\n * @fires drawlist\r\n * @fires toggle\r\n * @fires reorder-start\r\n * @fires reorder-end\r\n * @fires layer:visible\r\n * @fires layer:opacity\r\n * \r\n * @constructor\r\n * @extends {ol_control_Control}\r\n * @param {Object=} options\r\n *  @param {boolean} options.selection enable layer selection when click on the title\r\n *  @param {function} options.displayInLayerSwitcher function that takes a layer and return a boolean if the layer is displayed in the switcher, default test the displayInLayerSwitcher layer attribute\r\n *  @param {boolean} options.show_progress show a progress bar on tile layers, default false\r\n *  @param {boolean} options.mouseover show the panel on mouseover, default false\r\n *  @param {boolean} options.reordering allow layer reordering, default true\r\n *  @param {boolean} options.trash add a trash button to delete the layer, default false\r\n *  @param {function} options.oninfo callback on click on info button, if none no info button is shown DEPRECATED: use on(info) instead\r\n *  @param {boolean} options.extent add an extent button to zoom to the extent of the layer\r\n *  @param {function} options.onextent callback when click on extent, default fits view to extent\r\n *  @param {number} options.drawDelay delay in ms to redraw the layer (usefull to prevent flickering when manipulating the layers)\r\n *  @param {boolean} options.collapsed collapse the layerswitcher at beginning, default true\r\n *  @param {ol.layer.Group} options.layerGroup a layer group to display in the switcher, default display all layers of the map\r\n *  @param {boolean} options.noScroll prevent handle scrolling, default false\r\n *  @param {function} options.onchangeCheck optional callback on click on checkbox, you can call this method for doing operations after check/uncheck a layer\r\n *\r\n * Layers attributes that control the switcher\r\n *\t- allwaysOnTop {boolean} true to force layer stay on top of the others while reordering, default false\r\n *\t- displayInLayerSwitcher {boolean} display the layer in switcher, default true\r\n *\t- noSwitcherDelete {boolean} to prevent layer deletion (w. trash option = true), default false\r\n */\r\nvar ol_control_LayerSwitcher = class olcontrolLayerSwitcher extends ol_control_Control {\r\n  constructor(options) {\r\n    options = options || {}\r\n    var element = ol_ext_element.create('DIV', {\r\n      className: options.switcherClass || 'ol-layerswitcher'\r\n    })\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    })\r\n    \r\n    var self = this\r\n    this.dcount = 0\r\n    this.show_progress = options.show_progress\r\n    this.oninfo = (typeof (options.oninfo) == 'function' ? options.oninfo : null)\r\n    this.onextent = (typeof (options.onextent) == 'function' ? options.onextent : null)\r\n    this.hasextent = options.extent || options.onextent\r\n    this.hastrash = options.trash\r\n    this.reordering = (options.reordering !== false)\r\n    this._layers = []\r\n    this._layerGroup = (options.layerGroup && options.layerGroup.getLayers) ? options.layerGroup : null\r\n    this.onchangeCheck = (typeof (options.onchangeCheck) == \"function\" ? options.onchangeCheck : null)\r\n\r\n    // displayInLayerSwitcher\r\n    if (typeof (options.displayInLayerSwitcher) === 'function') {\r\n      this.displayInLayerSwitcher = options.displayInLayerSwitcher\r\n    }\r\n\r\n    // Insert in the map\r\n    if (!options.target) {\r\n      element.classList.add('ol-unselectable')\r\n      element.classList.add('ol-control')\r\n      element.classList.add(options.collapsed !== false ? 'ol-collapsed' : 'ol-forceopen')\r\n\r\n      this.button = ol_ext_element.create('BUTTON', {\r\n        type: 'button',\r\n        parent: element\r\n      })\r\n      this.button.addEventListener('touchstart', function (e) {\r\n        element.classList.toggle('ol-forceopen')\r\n        element.classList.add('ol-collapsed')\r\n        self.dispatchEvent({ type: 'toggle', collapsed: element.classList.contains('ol-collapsed') })\r\n        e.preventDefault()\r\n        self.overflow()\r\n      })\r\n      this.button.addEventListener('click', function () {\r\n        element.classList.toggle('ol-forceopen')\r\n        element.classList.add('ol-collapsed')\r\n        self.dispatchEvent({ type: 'toggle', collapsed: !element.classList.contains('ol-forceopen') })\r\n        self.overflow()\r\n      })\r\n\r\n      if (options.mouseover) {\r\n        element.addEventListener('mouseleave', function () {\r\n          element.classList.add(\"ol-collapsed\")\r\n          self.dispatchEvent({ type: 'toggle', collapsed: true })\r\n        })\r\n        element.addEventListener('mouseover', function () {\r\n          element.classList.remove(\"ol-collapsed\")\r\n          self.dispatchEvent({ type: 'toggle', collapsed: false })\r\n        })\r\n      }\r\n\r\n      if (options.minibar)\r\n        options.noScroll = true\r\n      if (!options.noScroll) {\r\n        this.topv = ol_ext_element.create('DIV', {\r\n          className: 'ol-switchertopdiv',\r\n          parent: element,\r\n          click: function () {\r\n            self.overflow(\"+50%\")\r\n          }\r\n        })\r\n\r\n        this.botv = ol_ext_element.create('DIV', {\r\n          className: 'ol-switcherbottomdiv',\r\n          parent: element,\r\n          click: function () {\r\n            self.overflow(\"-50%\")\r\n          }\r\n        })\r\n      }\r\n      this._noScroll = options.noScroll\r\n    }\r\n\r\n    this.panel_ = ol_ext_element.create('UL', {\r\n      className: 'panel',\r\n    })\r\n    this.panelContainer_ = ol_ext_element.create('DIV', {\r\n      className: 'panel-container',\r\n      html: this.panel_,\r\n      parent: element\r\n    })\r\n    // Handle mousewheel\r\n    if (!options.target && !options.noScroll) {\r\n      ol_ext_element.addListener(this.panel_, 'mousewheel DOMMouseScroll onmousewheel', function (e) {\r\n        if (self.overflow(Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail))))) {\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n        }\r\n      })\r\n    }\r\n\r\n    this.header_ = ol_ext_element.create('LI', {\r\n      className: 'ol-header',\r\n      parent: this.panel_\r\n    })\r\n\r\n    this.set('drawDelay', options.drawDelay || 0)\r\n    this.set('selection', options.selection)\r\n\r\n    if (options.minibar) {\r\n      // Wait init complete (for child classes)\r\n      setTimeout(function () {\r\n        var mbar = ol_ext_element.scrollDiv(this.panelContainer_, {\r\n          mousewheel: true,\r\n          vertical: true,\r\n          minibar: true\r\n        })\r\n        this.on(['drawlist', 'toggle'], function () {\r\n          mbar.refresh()\r\n        })\r\n      }.bind(this))\r\n    }\r\n  }\r\n  /** Test if a layer should be displayed in the switcher\r\n   * @param {ol.layer} layer\r\n   * @return {boolean} true if the layer is displayed\r\n   */\r\n  displayInLayerSwitcher(layer) {\r\n    return (layer.get('displayInLayerSwitcher') !== false)\r\n  }\r\n  /**\r\n   * Set the map instance the control is associated with.\r\n   * @param {_ol_Map_} map The map instance.\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map)\r\n    this.drawPanel()\r\n\r\n    if (this._listener) {\r\n      for (var i in this._listener){\r\n        ol_Observable_unByKey(this._listener[i])\r\n      }\r\n    }\r\n    this._listener = null\r\n\r\n    // Get change (new layer added or removed)\r\n    if (map) {\r\n      this._listener = {\r\n        moveend: map.on('moveend', this.viewChange.bind(this)),\r\n        size: map.on('change:size', this.overflow.bind(this))\r\n      }\r\n      // Listen to a layer group\r\n      if (this._layerGroup) {\r\n        this._listener.change = this._layerGroup.getLayers().on('change:length', this.drawPanel.bind(this))\r\n      } else {\r\n        //Listen to all layers\r\n        this._listener.change = map.getLayerGroup().getLayers().on('change:length', this.drawPanel.bind(this))\r\n      }\r\n    }\r\n  }\r\n  /** Show control\r\n   */\r\n  show() {\r\n    this.element.classList.add('ol-forceopen')\r\n    this.overflow()\r\n    this.dispatchEvent({ type: 'toggle', collapsed: false })\r\n  }\r\n  /** Hide control\r\n   */\r\n  hide() {\r\n    this.element.classList.remove('ol-forceopen')\r\n    this.overflow()\r\n    this.dispatchEvent({ type: 'toggle', collapsed: true })\r\n  }\r\n  /** Toggle control\r\n   */\r\n  toggle() {\r\n    this.element.classList.toggle(\"ol-forceopen\")\r\n    this.overflow()\r\n    this.dispatchEvent({ type: 'toggle', collapsed: !this.isOpen() })\r\n  }\r\n  /** Is control open\r\n   * @return {boolean}\r\n   */\r\n  isOpen() {\r\n    return this.element.classList.contains(\"ol-forceopen\")\r\n  }\r\n  /** Add a custom header\r\n   * @param {Element|string} html content html\r\n   */\r\n  setHeader(html) {\r\n    ol_ext_element.setHTML(this.header_, html)\r\n  }\r\n  /** Calculate overflow and add scrolls\r\n   * @param {Number} dir scroll direction -1|0|1|'+50%'|'-50%'\r\n   * @private\r\n   */\r\n  overflow(dir) {\r\n    if (this.button && !this._noScroll) {\r\n      // Nothing to show\r\n      if (ol_ext_element.hidden(this.panel_)) {\r\n        ol_ext_element.setStyle(this.element, { height: 'auto' })\r\n        return\r\n      }\r\n      // Calculate offset\r\n      var h = ol_ext_element.outerHeight(this.element)\r\n      var hp = ol_ext_element.outerHeight(this.panel_)\r\n      var dh = this.button.offsetTop + ol_ext_element.outerHeight(this.button)\r\n      //var dh = this.button.position().top + this.button.outerHeight(true);\r\n      var top = this.panel_.offsetTop - dh\r\n      if (hp > h - dh) {\r\n        // Bug IE: need to have an height defined\r\n        ol_ext_element.setStyle(this.element, { height: '100%' })\r\n        var li = this.panel_.querySelectorAll('li.ol-visible .li-content')[0]\r\n        var lh = li ? 2 * ol_ext_element.getStyle(li, 'height') : 0\r\n        switch (dir) {\r\n          case 1: top += lh; break\r\n          case -1: top -= lh; break\r\n          case \"+50%\": top += Math.round(h / 2); break\r\n          case \"-50%\": top -= Math.round(h / 2); break\r\n          default: break\r\n        }\r\n        // Scroll div\r\n        if (top + hp <= h - 3 * dh / 2) {\r\n          top = h - 3 * dh / 2 - hp\r\n          ol_ext_element.hide(this.botv)\r\n        } else {\r\n          ol_ext_element.show(this.botv)\r\n        }\r\n        if (top >= 0) {\r\n          top = 0\r\n          ol_ext_element.hide(this.topv)\r\n        } else {\r\n          ol_ext_element.show(this.topv)\r\n        }\r\n        // Scroll ?\r\n        ol_ext_element.setStyle(this.panel_, { top: top + \"px\" })\r\n        return true\r\n      } else {\r\n        ol_ext_element.setStyle(this.element, { height: \"auto\" })\r\n        ol_ext_element.setStyle(this.panel_, { top: 0 })\r\n        ol_ext_element.hide(this.botv)\r\n        ol_ext_element.hide(this.topv)\r\n        return false\r\n      }\r\n    }\r\n    else\r\n      return false\r\n  }\r\n  /** Set the layer associated with a li\r\n   * @param {Element} li\r\n   * @param {ol.layer} layer\r\n   * @private\r\n   */\r\n  _setLayerForLI(li, layer) {\r\n    var listeners = []\r\n    if (layer.getLayers) {\r\n      listeners.push(layer.getLayers().on('change:length', this.drawPanel.bind(this)))\r\n    }\r\n    if (li) {\r\n      // Handle opacity change\r\n      listeners.push(layer.on('change:opacity', (function () {\r\n        this.setLayerOpacity(layer, li)\r\n      }).bind(this)))\r\n      // Handle visibility chage\r\n      listeners.push(layer.on('change:visible', (function () {\r\n        this.setLayerVisibility(layer, li)\r\n      }).bind(this)))\r\n    }\r\n    // Other properties\r\n    listeners.push(layer.on('propertychange', (function (e) {\r\n      if (e.key === 'displayInLayerSwitcher'\r\n        || e.key === 'openInLayerSwitcher'\r\n        || e.key === 'title'\r\n        || e.key === 'name') {\r\n        this.drawPanel(e)\r\n      }\r\n    }).bind(this)))\r\n    this._layers.push({ li: li, layer: layer, listeners: listeners })\r\n  }\r\n  /** Set opacity for a layer\r\n   * @param {ol.layer.Layer} layer\r\n   * @param {Element} li the list element\r\n   * @private\r\n   */\r\n  setLayerOpacity(layer, li) {\r\n    var i = li.querySelector('.layerswitcher-opacity-cursor')\r\n    if (i){\r\n      i.style.left = (layer.getOpacity() * 100) + \"%\"\r\n    }\r\n    this.dispatchEvent({ type: 'layer:opacity', layer: layer })\r\n  }\r\n  /** Set visibility for a layer\r\n   * @param {ol.layer.Layer} layer\r\n   * @param {Element} li the list element\r\n   * @api\r\n   */\r\n  setLayerVisibility(layer, li) {\r\n    var i = li.querySelector('.ol-visibility')\r\n    if (i) {\r\n      i.checked = layer.getVisible()\r\n    }\r\n    if (layer.getVisible()){\r\n      li.classList.add('ol-visible')\r\n    } else{\r\n      li.classList.remove('ol-visible')\r\n    }\r\n    this.dispatchEvent({ type: 'layer:visible', layer: layer })\r\n  }\r\n  /** Clear layers associated with li\r\n   * @private\r\n   */\r\n  _clearLayerForLI() {\r\n    this._layers.forEach(function (li) {\r\n      li.listeners.forEach(function (l) {\r\n        ol_Observable_unByKey(l)\r\n      })\r\n    })\r\n    this._layers = []\r\n  }\r\n  /** Get the layer associated with a li\r\n   * @param {Element} li\r\n   * @return {ol.layer}\r\n   * @private\r\n   */\r\n  _getLayerForLI(li) {\r\n    for (var i = 0, l; l = this._layers[i]; i++) {\r\n      if (l.li === li) {\r\n        return l.layer\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  /**\r\n   * On view change hide layer depending on resolution / extent\r\n   * @private\r\n   */\r\n  viewChange() {\r\n    this.panel_.querySelectorAll('li').forEach(function (li) {\r\n      var l = this._getLayerForLI(li)\r\n      if (l) {\r\n        if (this.testLayerVisibility(l)) {\r\n          li.classList.remove('ol-layer-hidden')\r\n        } else {\r\n          li.classList.add('ol-layer-hidden')\r\n        }\r\n      }\r\n    }.bind(this))\r\n  }\r\n  /** Get control panel\r\n   * @api\r\n   */\r\n  getPanel() {\r\n    return this.panelContainer_\r\n  }\r\n  /** Draw the panel control (prevent multiple draw due to layers manipulation on the map with a delay function)\r\n   * @api\r\n   */\r\n  drawPanel() {\r\n    if (!this.getMap())\r\n      return\r\n    var self = this\r\n    // Multiple event simultaneously / draw once => put drawing in the event queue\r\n    this.dcount++\r\n    setTimeout(function () { self.drawPanel_() }, this.get('drawDelay') || 0)\r\n  }\r\n  /** Delayed draw panel control\r\n   * @private\r\n   */\r\n  drawPanel_() {\r\n    if (--this.dcount || this.dragging_) {\r\n      return\r\n    }\r\n    var scrollTop = this.panelContainer_.scrollTop\r\n\r\n    // Remove existing layers\r\n    this._clearLayerForLI()\r\n    this.panel_.querySelectorAll('li').forEach(function (li) {\r\n      if (!li.classList.contains('ol-header'))\r\n        li.remove()\r\n    }.bind(this))\r\n    // Draw list\r\n    if (this._layerGroup) {\r\n      this.drawList(this.panel_, this._layerGroup.getLayers())\r\n    } else if (this.getMap()) {\r\n      this.drawList(this.panel_, this.getMap().getLayers())\r\n    }\r\n    // Reset scrolltop\r\n    this.panelContainer_.scrollTop = scrollTop\r\n  }\r\n  /** Change layer visibility according to the baselayer option\r\n   * @param {ol.layer}\r\n   * @param {Array<ol.layer>} related layers\r\n   * @private\r\n   */\r\n  switchLayerVisibility(l, layers) {\r\n    if (!l.get('baseLayer')) {\r\n      l.setVisible(!l.getVisible())\r\n    } else {\r\n      if (!l.getVisible()) {\r\n        l.setVisible(true)\r\n      }\r\n      layers.forEach(function (li) {\r\n        if (l !== li && li.get('baseLayer') && li.getVisible()) {\r\n          li.setVisible(false)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  /** Check if layer is on the map (depending on resolution / zoom and extent)\r\n   * @param {ol.layer}\r\n   * @return {boolean}\r\n   * @private\r\n   */\r\n  testLayerVisibility(layer) {\r\n    if (!this.getMap())\r\n      return true\r\n    var res = this.getMap().getView().getResolution()\r\n    var zoom = this.getMap().getView().getZoom()\r\n    // Calculate visibility on resolution or zoom\r\n    if (layer.getMaxResolution() <= res || layer.getMinResolution() >= res) {\r\n      return false\r\n    } else if (layer.getMinZoom && (layer.getMinZoom() >= zoom || layer.getMaxZoom() < zoom)) {\r\n      return false\r\n    } else {\r\n      // Check extent\r\n      var ex0 = layer.getExtent()\r\n      if (ex0) {\r\n        var ex = this.getMap().getView().calculateExtent(this.getMap().getSize())\r\n        return ol_extent_intersects(ex, ex0)\r\n      }\r\n      return true\r\n    }\r\n  }\r\n  /** Start ordering the list\r\n  *\t@param {event} e drag event\r\n  *\t@private\r\n  */\r\n  dragOrdering_(e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    // Get params\r\n    var self = this\r\n    var elt = e.currentTarget.parentNode.parentNode\r\n    var start = true\r\n    var panel = this.panel_\r\n    var pageY\r\n    var pageY0 = e.pageY\r\n      || (e.touches && e.touches.length && e.touches[0].pageY)\r\n      || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageY)\r\n    var target, dragElt\r\n    var layer, group\r\n    elt.parentNode.classList.add('drag')\r\n\r\n    // Stop ordering\r\n    function stop() {\r\n      if (target) {\r\n        // Get drag on parent\r\n        var drop = layer\r\n        var isSelected = self.getSelection() === drop\r\n        if (drop && target) {\r\n          var collection\r\n          if (group)\r\n            collection = group.getLayers()\r\n          else\r\n            collection = self._layerGroup ? self._layerGroup.getLayers() : self.getMap().getLayers()\r\n          var layers = collection.getArray()\r\n          // Switch layers\r\n          for (var i = 0; i < layers.length; i++) {\r\n            if (layers[i] == drop) {\r\n              collection.removeAt(i)\r\n              break\r\n            }\r\n          }\r\n          for (var j = 0; j < layers.length; j++) {\r\n            if (layers[j] === target) {\r\n              if (i > j)\r\n                collection.insertAt(j, drop)\r\n              else\r\n                collection.insertAt(j + 1, drop)\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (isSelected)\r\n          self.selectLayer(drop)\r\n\r\n        self.dispatchEvent({ type: \"reorder-end\", layer: drop, group: group })\r\n      }\r\n\r\n      elt.parentNode.querySelectorAll('li').forEach(function (li) {\r\n        li.classList.remove('dropover')\r\n        li.classList.remove('dropover-after')\r\n        li.classList.remove('dropover-before')\r\n      })\r\n      elt.classList.remove(\"drag\")\r\n      elt.parentNode.classList.remove(\"drag\")\r\n      self.element.classList.remove('drag')\r\n      if (dragElt)\r\n        dragElt.remove()\r\n\r\n      ol_ext_element.removeListener(document, 'mousemove touchmove', move)\r\n      ol_ext_element.removeListener(document, 'mouseup touchend touchcancel', stop)\r\n    }\r\n\r\n    // Ordering\r\n    function move(e) {\r\n      // First drag (more than 2 px) => show drag element (ghost)\r\n      pageY = e.pageY\r\n        || (e.touches && e.touches.length && e.touches[0].pageY)\r\n        || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageY)\r\n      if (start && Math.abs(pageY0 - pageY) > 2) {\r\n        start = false\r\n        elt.classList.add(\"drag\")\r\n        layer = self._getLayerForLI(elt)\r\n        target = false\r\n        group = self._getLayerForLI(elt.parentNode.parentNode)\r\n        // Ghost div\r\n        dragElt = ol_ext_element.create('LI', {\r\n          className: 'ol-dragover',\r\n          html: elt.innerHTML,\r\n          style: {\r\n            position: \"absolute\",\r\n            \"z-index\": 10000,\r\n            left: elt.offsetLeft,\r\n            opacity: 0.5,\r\n            width: ol_ext_element.outerWidth(elt),\r\n            height: ol_ext_element.getStyle(elt, 'height'),\r\n          },\r\n          parent: panel\r\n        })\r\n        self.element.classList.add('drag')\r\n        self.dispatchEvent({ type: \"reorder-start\", layer: layer, group: group })\r\n      }\r\n      // Start a new drag sequence\r\n      if (!start) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        // Ghost div\r\n        ol_ext_element.setStyle(dragElt, { top: pageY - ol_ext_element.offsetRect(panel).top + panel.scrollTop + 5 })\r\n\r\n        var li\r\n        if (!e.touches) {\r\n          li = e.target\r\n        } else {\r\n          li = document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY)\r\n        }\r\n        if (li.classList.contains(\"ol-switcherbottomdiv\")) {\r\n          self.overflow(-1)\r\n        } else if (li.classList.contains(\"ol-switchertopdiv\")) {\r\n          self.overflow(1)\r\n        }\r\n        // Get associated li\r\n        while (li && li.tagName !== 'LI') {\r\n          li = li.parentNode\r\n        }\r\n        if (!li || !li.classList.contains('dropover')) {\r\n          elt.parentNode.querySelectorAll('li').forEach(function (li) {\r\n            li.classList.remove('dropover')\r\n            li.classList.remove('dropover-after')\r\n            li.classList.remove('dropover-before')\r\n          })\r\n        }\r\n        if (li && li.parentNode.classList.contains('drag') && li !== elt) {\r\n          target = self._getLayerForLI(li)\r\n          // Don't mix layer level\r\n          if (target && !target.get('allwaysOnTop') == !layer.get('allwaysOnTop')) {\r\n            li.classList.add(\"dropover\")\r\n            li.classList.add((elt.offsetTop < li.offsetTop) ? 'dropover-after' : 'dropover-before')\r\n          } else {\r\n            target = false\r\n          }\r\n          ol_ext_element.show(dragElt)\r\n        } else {\r\n          target = false\r\n          if (li === elt)\r\n            ol_ext_element.hide(dragElt)\r\n          else\r\n            ol_ext_element.show(dragElt)\r\n        }\r\n\r\n        if (!target)\r\n          dragElt.classList.add(\"forbidden\")\r\n        else\r\n          dragElt.classList.remove(\"forbidden\")\r\n      }\r\n    }\r\n\r\n    // Start ordering\r\n    ol_ext_element.addListener(document, 'mousemove touchmove', move)\r\n    ol_ext_element.addListener(document, 'mouseup touchend touchcancel', stop)\r\n  }\r\n  /** Change opacity on drag\r\n  *\t@param {event} e drag event\r\n  *\t@private\r\n  */\r\n  dragOpacity_(e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    var self = this\r\n    // Register start params\r\n    var elt = e.target\r\n    var layer = this._getLayerForLI(elt.parentNode.parentNode.parentNode)\r\n    if (!layer)\r\n      return\r\n    var x = e.pageX\r\n      || (e.touches && e.touches.length && e.touches[0].pageX)\r\n      || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageX)\r\n    var start = ol_ext_element.getStyle(elt, 'left') - x\r\n    self.dragging_ = true\r\n\r\n    // stop dragging\r\n    function stop() {\r\n      ol_ext_element.removeListener(document, \"mouseup touchend touchcancel\", stop)\r\n      ol_ext_element.removeListener(document, \"mousemove touchmove\", move)\r\n      self.dragging_ = false\r\n    }\r\n    // On draggin\r\n    function move(e) {\r\n      var x = e.pageX\r\n        || (e.touches && e.touches.length && e.touches[0].pageX)\r\n        || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageX)\r\n      var delta = (start + x) / ol_ext_element.getStyle(elt.parentNode, 'width')\r\n      var opacity = Math.max(0, Math.min(1, delta))\r\n      ol_ext_element.setStyle(elt, { left: (opacity * 100) + \"%\" })\r\n      elt.parentNode.nextElementSibling.innerHTML = Math.round(opacity * 100)\r\n      layer.setOpacity(opacity)\r\n    }\r\n    // Register move\r\n    ol_ext_element.addListener(document, \"mouseup touchend touchcancel\", stop)\r\n    ol_ext_element.addListener(document, \"mousemove touchmove\", move)\r\n  }\r\n  /** Render a list of layer\r\n   * @param {Elemen} element to render\r\n   * @layers {Array{ol.layer}} list of layer to show\r\n   * @api stable\r\n   * @private\r\n   */\r\n  drawList(ul, collection) {\r\n    var self = this\r\n    var layers = collection.getArray()\r\n\r\n    // Change layer visibility\r\n    var setVisibility = function (e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      var l = self._getLayerForLI(this.parentNode.parentNode)\r\n      self.switchLayerVisibility(l, collection)\r\n      if (self.get('selection') && l.getVisible()) {\r\n        self.selectLayer(l)\r\n      }\r\n      if (self.onchangeCheck) {\r\n        self.onchangeCheck(l)\r\n      }\r\n    }\r\n    // Info button click\r\n    function onInfo(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      var l = self._getLayerForLI(this.parentNode.parentNode)\r\n      self.oninfo(l)\r\n      self.dispatchEvent({ type: \"info\", layer: l })\r\n    }\r\n    // Zoom to extent button\r\n    function zoomExtent(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      var l = self._getLayerForLI(this.parentNode.parentNode)\r\n      if (self.onextent) {\r\n        self.onextent(l)\r\n      } else {\r\n        self.getMap().getView().fit(l.getExtent(), self.getMap().getSize())\r\n      }\r\n      self.dispatchEvent({ type: \"extent\", layer: l })\r\n    }\r\n    // Remove a layer on trash click\r\n    function removeLayer(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      var li = this.parentNode.parentNode.parentNode.parentNode\r\n      var layer, group = self._getLayerForLI(li)\r\n      // Remove the layer from a group or from a map\r\n      if (group) {\r\n        layer = self._getLayerForLI(this.parentNode.parentNode)\r\n        group.getLayers().remove(layer)\r\n        if (group.getLayers().getLength() == 0 && !group.get('noSwitcherDelete')) {\r\n          removeLayer.call(li.querySelectorAll('.layerTrash')[0], e)\r\n        }\r\n      } else {\r\n        li = this.parentNode.parentNode\r\n        self.getMap().removeLayer(self._getLayerForLI(li))\r\n      }\r\n    }\r\n\r\n    // Create a list for a layer\r\n    function createLi(layer) {\r\n      if (!this.displayInLayerSwitcher(layer)) {\r\n        this._setLayerForLI(null, layer)\r\n        return\r\n      }\r\n\r\n      var li = ol_ext_element.create('LI', {\r\n        className: (layer.getVisible() ? \"ol-visible \" : \" \") + (layer.get('baseLayer') ? \"baselayer\" : \"\"),\r\n        parent: ul\r\n      })\r\n      this._setLayerForLI(li, layer)\r\n      if (this._selectedLayer === layer) {\r\n        li.classList.add('ol-layer-select')\r\n      }\r\n\r\n      var layer_buttons = ol_ext_element.create('DIV', {\r\n        className: 'ol-layerswitcher-buttons',\r\n        parent: li\r\n      })\r\n\r\n      // Content div\r\n      var d = ol_ext_element.create('DIV', {\r\n        className: 'li-content',\r\n        parent: li\r\n      })\r\n\r\n      // Visibility\r\n      ol_ext_element.create('INPUT', {\r\n        type: layer.get('baseLayer') ? 'radio' : 'checkbox',\r\n        className: 'ol-visibility',\r\n        checked: layer.getVisible(),\r\n        click: setVisibility,\r\n        parent: d\r\n      })\r\n      // Label\r\n      var label = ol_ext_element.create('LABEL', {\r\n        title: layer.get('title') || layer.get('name'),\r\n        click: setVisibility,\r\n        style: {\r\n          userSelect: 'none'\r\n        },\r\n        parent: d\r\n      })\r\n      label.addEventListener('selectstart', function () { return false })\r\n      ol_ext_element.create('SPAN', {\r\n        html: layer.get('title') || layer.get('name'),\r\n        click: function (e) {\r\n          if (this.get('selection')) {\r\n            e.stopPropagation()\r\n            this.selectLayer(layer)\r\n          }\r\n        }.bind(this),\r\n        parent: label\r\n      })\r\n\r\n      //  up/down\r\n      if (this.reordering) {\r\n        if ((i < layers.length - 1 && (layer.get(\"allwaysOnTop\") || !layers[i + 1].get(\"allwaysOnTop\")))\r\n          || (i > 0 && (!layer.get(\"allwaysOnTop\") || layers[i - 1].get(\"allwaysOnTop\")))) {\r\n          ol_ext_element.create('DIV', {\r\n            className: 'layerup ol-noscroll',\r\n            title: this.tip.up,\r\n            on: { 'mousedown touchstart': function (e) { self.dragOrdering_(e) } },\r\n            parent: layer_buttons\r\n          })\r\n        }\r\n      }\r\n\r\n      // Show/hide sub layers\r\n      if (layer.getLayers) {\r\n        var nb = 0\r\n        layer.getLayers().forEach(function (l) {\r\n          if (self.displayInLayerSwitcher(l))\r\n            nb++\r\n        })\r\n        if (nb) {\r\n          ol_ext_element.create('DIV', {\r\n            className: layer.get(\"openInLayerSwitcher\") ? \"collapse-layers\" : \"expend-layers\",\r\n            title: this.tip.plus,\r\n            click: function () {\r\n              var l = self._getLayerForLI(this.parentNode.parentNode)\r\n              l.set(\"openInLayerSwitcher\", !l.get(\"openInLayerSwitcher\"))\r\n            },\r\n            parent: layer_buttons\r\n          })\r\n        }\r\n      }\r\n\r\n      // Info button\r\n      if (this.oninfo) {\r\n        ol_ext_element.create('DIV', {\r\n          className: 'layerInfo',\r\n          title: this.tip.info,\r\n          click: onInfo,\r\n          parent: layer_buttons\r\n        })\r\n      }\r\n      // Layer remove\r\n      if (this.hastrash && !layer.get(\"noSwitcherDelete\")) {\r\n        ol_ext_element.create('DIV', {\r\n          className: 'layerTrash',\r\n          title: this.tip.trash,\r\n          click: removeLayer,\r\n          parent: layer_buttons\r\n        })\r\n      }\r\n      // Layer extent\r\n      if (this.hasextent && layers[i].getExtent()) {\r\n        var ex = layers[i].getExtent()\r\n        if (ex.length == 4 && ex[0] < ex[2] && ex[1] < ex[3]) {\r\n          ol_ext_element.create('DIV', {\r\n            className: 'layerExtent',\r\n            title: this.tip.extent,\r\n            click: zoomExtent,\r\n            parent: layer_buttons\r\n          })\r\n        }\r\n      }\r\n\r\n      // Progress\r\n      if (this.show_progress && layer instanceof ol_layer_Tile) {\r\n        var p = ol_ext_element.create('DIV', {\r\n          className: 'layerswitcher-progress',\r\n          parent: d\r\n        })\r\n        this.setprogress_(layer)\r\n        layer.layerswitcher_progress = ol_ext_element.create('DIV', { parent: p })\r\n      }\r\n\r\n      // Opacity\r\n      var opacity = ol_ext_element.create('DIV', {\r\n        className: 'layerswitcher-opacity',\r\n        // Click on the opacity line\r\n        click: function (e) {\r\n          if (e.target !== this)\r\n            return\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n          var op = Math.max(0, Math.min(1, e.offsetX / ol_ext_element.getStyle(this, 'width')))\r\n          self._getLayerForLI(this.parentNode.parentNode).setOpacity(op)\r\n          this.parentNode.querySelectorAll('.layerswitcher-opacity-label')[0].innerHTML = Math.round(op * 100)\r\n        },\r\n        parent: d\r\n      })\r\n      // Start dragging\r\n      ol_ext_element.create('DIV', {\r\n        className: 'layerswitcher-opacity-cursor ol-noscroll',\r\n        style: { left: (layer.getOpacity() * 100) + \"%\" },\r\n        on: {\r\n          'mousedown touchstart': function (e) { self.dragOpacity_(e) }\r\n        },\r\n        parent: opacity\r\n      })\r\n      // Percent\r\n      ol_ext_element.create('DIV', {\r\n        className: 'layerswitcher-opacity-label',\r\n        html: Math.round(layer.getOpacity() * 100),\r\n        parent: d\r\n      })\r\n\r\n      // Layer group\r\n      if (layer.getLayers) {\r\n        li.classList.add('ol-layer-group')\r\n        if (layer.get(\"openInLayerSwitcher\") === true) {\r\n          var ul2 = ol_ext_element.create('UL', {\r\n            parent: li\r\n          })\r\n          this.drawList(ul2, layer.getLayers())\r\n        }\r\n      }\r\n      li.classList.add(this.getLayerClass(layer))\r\n\r\n      // Dispatch a dralist event to allow customisation\r\n      this.dispatchEvent({ type: 'drawlist', layer: layer, li: li })\r\n    }\r\n\r\n    // Add the layer list\r\n    for (var i = layers.length - 1; i >= 0; i--) {\r\n      createLi.call(this, layers[i])\r\n    }\r\n\r\n    this.viewChange()\r\n\r\n    if (ul === this.panel_)\r\n      this.overflow()\r\n  }\r\n  /** Select a layer\r\n   * @param {ol.layer.Layer} layer\r\n   * @returns {string} the layer classname\r\n   * @api\r\n   */\r\n  getLayerClass(layer) {\r\n    if (!layer)\r\n      return 'none'\r\n    if (layer.getLayers)\r\n      return 'ol-layer-group'\r\n    if (layer instanceof ol_layer_Vector)\r\n      return 'ol-layer-vector'\r\n    if (layer instanceof ol_layer_VectorTile)\r\n      return 'ol-layer-vectortile'\r\n    if (layer instanceof ol_layer_Tile)\r\n      return 'ol-layer-tile'\r\n    if (layer instanceof ol_layer_Image)\r\n      return 'ol-layer-image'\r\n    if (layer instanceof ol_layer_Heatmap)\r\n      return 'ol-layer-heatmap'\r\n    /* ol < 6 compatibility VectorImage is not defined */\r\n    // if (layer instanceof ol_layer_VectorImage) return 'ol-layer-vectorimage';\r\n    if (layer.getFeatures)\r\n      return 'ol-layer-vectorimage'\r\n    /* */\r\n    return 'unknown'\r\n  }\r\n  /** Select a layer\r\n   * @param {ol.layer.Layer} layer\r\n   * @api\r\n   */\r\n  selectLayer(layer, silent) {\r\n    if (!layer) {\r\n      if (!this.getMap())\r\n        return\r\n      layer = this.getMap().getLayers().item(this.getMap().getLayers().getLength() - 1)\r\n    }\r\n    this._selectedLayer = layer\r\n    this.drawPanel()\r\n    if (!silent)\r\n      this.dispatchEvent({ type: 'select', layer: layer })\r\n  }\r\n  /** Get selected layer\r\n   * @returns {ol.layer.Layer}\r\n   */\r\n  getSelection() {\r\n    return this._selectedLayer\r\n  }\r\n  /** Handle progress bar for a layer\r\n  *\t@private\r\n  */\r\n  setprogress_(layer) {\r\n    if (!layer.layerswitcher_progress) {\r\n      var loaded = 0\r\n      var loading = 0\r\n      var draw = function () {\r\n        if (loading === loaded) {\r\n          loading = loaded = 0\r\n          ol_ext_element.setStyle(layer.layerswitcher_progress, { width: 0 }) // layer.layerswitcher_progress.width(0);\r\n        } else {\r\n          ol_ext_element.setStyle(layer.layerswitcher_progress, { width: (loaded / loading * 100).toFixed(1) + '%' }) // layer.layerswitcher_progress.css('width', (loaded / loading * 100).toFixed(1) + '%');\r\n        }\r\n      }\r\n      layer.getSource().on('tileloadstart', function () {\r\n        loading++\r\n        draw()\r\n      })\r\n      layer.getSource().on('tileloadend', function () {\r\n        loaded++\r\n        draw()\r\n      })\r\n      layer.getSource().on('tileloaderror', function () {\r\n        loaded++\r\n        draw()\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/** List of tips for internationalization purposes\r\n*/\r\nol_control_LayerSwitcher.prototype.tip = {\r\n  up: \"up/down\",\r\n  down: \"down\",\r\n  info: \"informations...\",\r\n  extent: \"zoom to extent\",\r\n  trash: \"remove layer\",\r\n  plus: \"expand/shrink\"\r\n};\r\n\r\nexport default ol_control_LayerSwitcher\r\n","import {Circle as CircleStyle, Fill, RegularShape, Icon, Stroke, Style, Text} from 'ol/style.js';\r\nimport { Point} from 'ol/geom.js';\r\n//extfunc.js\r\nconst sleStyle = new Style({\r\n    image: new Icon({\r\n        src: './data/sle.svg',\r\n        scale: .9 \r\n    })\r\n  });\r\nconst wehStyle = new Style({\r\n    image: new Icon({\r\n        src: './data/weh.svg',\r\n        scale: .9 \r\n    })\r\n  });\r\nconst bru_nlwknStyle = new Style({\r\n    image: new Icon({\r\n    src: './data/bru_nlwkn.svg',\r\n    scale: .9 \r\n    })\r\n});\r\nconst bruAndereStyle = new Style({\r\n    image: new Icon({\r\n    src: './data/bru_andere.svg',\r\n    scale: .9 \r\n    })\r\n});\r\nconst dueStyle = new Style({\r\n    image: new Icon({\r\n        src: './data/due.svg',\r\n        scale: .9\r\n    })\r\n});\r\nconst queStyle = new Style({\r\n    image: new Icon({\r\n    src: './data/que.svg',\r\n    scale: .9\r\n    })\r\n});\r\nconst son_punStyle = new Style({\r\n    image: new RegularShape({\r\n    fill: new Fill({color:'rgba(209, 32, 253, 1)' }),\r\n    stroke: new Stroke({\r\n    color: 'black',\r\n    width: 2\r\n    }),\r\n    points: 4,\r\n    radius: 7,\r\n    angle: Math.PI / 4\r\n    })\r\n});\r\nconst km10scalStyle = new Style({\r\n    stroke: new Stroke({\r\n        color: 'grey',\r\n        width: .5\r\n    })\r\n});\r\nconst gehoelz_vecStyle = new Style({\r\n    stroke: new Stroke({\r\n    color: 'rgba(173, 114, 3, 1)',\r\n    width: 3\r\n    }),\r\n});\r\nconst son_linStyle = new Style({\r\n    stroke: new Stroke({\r\n    color: 'rgba(209, 32, 253, 1)',\r\n    width: 4\r\n    }),\r\n});\r\nfunction getStyleForArtEin(feature) {   \r\n    const artValue = feature.get('Ein_ord');\r\n    \r\n    let iconSrc;\r\n    switch (artValue) {\r\n        case '1. Ordnung':\r\n            iconSrc = './data/einErsterOrdnung.svg';\r\n            break;\r\n        case '2. Ordnung':\r\n            iconSrc = './data/einZweiterOrdnung.svg';\r\n            break;\r\n        case '3. Ordnung':\r\n            iconSrc = './data/einDritterOrdnung.svg';\r\n            break;\r\n        case 'Einleitung':\r\n            iconSrc = './data/einEinleitung.svg';\r\n            break;\r\n        case 'Sonstige':\r\n            iconSrc = './data/einSonstige.svg';\r\n            break;\r\n        default:\r\n            iconSrc = './data/einSonstige.svg';\r\n    }\r\n\r\n    return new Style({\r\n        image: new Icon({\r\n            src: iconSrc,\r\n            scale: .9 \r\n        })\r\n    });\r\n}\r\nfunction machWasMitFSK(feature){\r\n    console.log (feature.get('Art'));\r\n};\r\nfunction getStyleForArtFSK(feature) {\r\n    const artValue = feature.get('Art');\r\n    let fillColor, strokeColor;\r\n    switch (artValue) {\r\n    case 'p':\r\n        fillColor = 'rgba(200, 200, 200, .6)';\r\n        strokeColor = 'black';\r\n        break;\r\n    case 'o':\r\n        fillColor = 'rgba(255, 220, 220, .6)';\r\n        strokeColor = 'black';\r\n        break;\r\n    case 'l':\r\n        fillColor = 'rgba(255, 190, 150, .6)';\r\n        strokeColor = 'black';\r\n        break;\r\n    default:\r\n        fillColor = 'rgba(255, 255, 255, 1)';\r\n        strokeColor = 'grey';\r\n    }\r\n    return new Style({\r\n        fill: new Fill({\r\n            color: fillColor\r\n        }),\r\n        stroke: new Stroke({\r\n            color: strokeColor,\r\n            width: 0.5\r\n        })\r\n    });\r\n};\r\nfunction getStyleForArtUmn(feature) {\r\n  const mnIdValue = feature.get('Massn_ID');\r\n  let fillColor, strokeColor;\r\n\r\n  switch (mnIdValue) {\r\n  //zweimalige Mahd\r\n  case 23:\r\n      //fillColor = 'rgba(200, 200, 200, .6)';\r\n      strokeColor = 'rgba(135, 101, 0, 0.1)';\r\n      break;  \r\n  //zweimalige Mahd\r\n  case 9:\r\n      //fillColor = 'rgba(200, 200, 200, .6)';\r\n      strokeColor = 'red';\r\n      break;\r\n  //keine Mahd\r\n  case 4:\r\n      //fillColor = 'rgba(200, 200, 200, .6)';\r\n      strokeColor = 'blue';\r\n      break;\r\n  //einmalige Mahd\r\n  case 11:\r\n      //fillColor = 'rgba(255, 220, 220, .6)';\r\n      strokeColor = 'blue';\r\n      break;\r\n  //beobachtende Unterhaltung\r\n  case 1:\r\n      //fillColor = 'rgba(255, 190, 150, .6)';\r\n      strokeColor = 'blue';\r\n      break;\r\n  default:\r\n      //fillColor = 'rgba(255, 255, 255, 1)';\r\n      strokeColor = 'grey';\r\n  }\r\n  return new Style({\r\n      //fill: new Fill({\r\n      //    color: fillColor\r\n      //}),\r\n      stroke: new Stroke({\r\n          color: strokeColor,\r\n          width: 5\r\n      })\r\n  });\r\n};\r\nconst km100scalStyle = function(feature, text, resolution) {\r\n    var minResolution = 0;\r\n    var maxResolution = 5; \r\n    if (resolution > minResolution && resolution < maxResolution) {\r\n      return new Style({\r\n        text: new Text({\r\n          text: text,\r\n          font: 'normal 18px \"Arial Light\", \"Helvetica Neue Light\", Arial, sans-serif',\r\n          offsetX: -10,\r\n          offsetY: 10,        \r\n        }),\r\n        stroke: new Stroke({\r\n          color: 'black', // oder eine andere Linienfarbe\r\n          width: 1 // oder eine andere Linienbreite  \r\n        })\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n};\r\nconst km500scalStyle = function(feature, text, resolution) {\r\n    var minResolution = 0;\r\n    var maxResolution = 10; \r\n    if (resolution > minResolution && resolution < maxResolution) {\r\n      return new Style({\r\n        text: new Text({\r\n          text: text,\r\n          font: 'normal 20px \"Arial Light\", \"Helvetica Neue Light\", Arial, sans-serif',\r\n          offsetX: -10,\r\n          offsetY: 10,\r\n          fill: new Fill({\r\n            color: 'rgba(0, 0, 0, 1)'\r\n          }),\r\n        }),\r\n        stroke: new Stroke({\r\n          color: 'black', // oder eine andere Linienfarbe\r\n          width: 2 // oder eine andere Linienbreite  \r\n        })\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n};\r\n\r\nconst arrowStyle = new Style({\r\n    stroke: new Stroke({\r\n        color: 'black',\r\n        width: 4,\r\n    }),\r\n  });\r\n  \r\n  const endpointStyle = new Style({\r\n    geometry: function (feature) {\r\n        const coordinates = feature.getGeometry().getCoordinates();\r\n        return new Point(coordinates[coordinates.length - 1]);\r\n    },\r\n    image: new CircleStyle({\r\n        radius: 6,          // Radius des Kreises (Endpunkt)\r\n        fill: new Fill({ color: 'red' }), // Füllfarbe des Kreises\r\n        stroke: new Stroke({\r\n        color: 'black',    // Randfarbe des Kreises\r\n        width: 2,          // Breite des Randes\r\n        }),\r\n    }),\r\n  });\r\n  \r\nconst combinedStyle = [arrowStyle, endpointStyle];\r\n\r\nexport { bru_nlwknStyle,\r\n    sleStyle,\r\n    wehStyle, \r\n    bruAndereStyle, \r\n    dueStyle,\r\n    queStyle,\r\n    son_linStyle, \r\n    son_punStyle,\r\n    km10scalStyle,\r\n    gehoelz_vecStyle,\r\n    getStyleForArtFSK,\r\n    getStyleForArtEin,\r\n    getStyleForArtUmn,\r\n    km100scalStyle,\r\n    km500scalStyle,\r\n    combinedStyle,\r\n    machWasMitFSK\r\n};\r\n    \r\n  \r\n\r\n","//myFunc.js\r\nfunction calcSumme(a,b) {\r\nvar summe = a + b;\r\nreturn summe;\r\n}; \r\n\r\n\r\nexport {calcSumme};","import Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport * as LoadingStrategy from 'ol/loadingstrategy';\nimport * as proj from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Overlay from 'ol/Overlay.js';\nimport Draw from 'ol/interaction/Draw.js';\nimport {LineString, Polygon, Point, Circle} from 'ol/geom.js';\nimport Geolocation from 'ol/Geolocation.js';\nimport {circular} from 'ol/geom/Polygon';\n\nimport {Circle as CircleStyle, Fill, Stroke,Style} from 'ol/style.js';\n\nimport {OSM, Vector as VectorSource} from 'ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\nimport TileWMS from 'ol/source/TileWMS.js';\nimport TileImage from 'ol/source/TileImage.js';\nimport XYZ from 'ol/source/XYZ.js';\n\n\nimport {getArea, getLength} from 'ol/sphere.js';\nimport {unByKey} from 'ol/Observable.js';\nimport {Attribution, ZoomToExtent, defaults as defaultControls, Control} from 'ol/control.js';\n\nimport LayerSwitcher from 'ol-ext/control/LayerSwitcher';\nimport LayerGroup from 'ol/layer/Group';\nimport { \n  getStyleForArtEin,\n  gehoelz_vecStyle, \n  sleStyle, \n  wehStyle, \n  bru_nlwknStyle, \n  bruAndereStyle,\n  dueStyle, \n  queStyle, \n  getStyleForArtFSK, \n  getStyleForArtUmn,\n  son_linStyle, \n  son_punStyle,\n  km10scalStyle,\n  km100scalStyle,\n  km500scalStyle,\n  combinedStyle,\n  machWasMitFSK\n} from './extStyle';\nimport { calcSumme } from './myFunc.js';\n\n\n\n\n///////Test\nvar ergebnis = calcSumme(5, 3);\nconsole.log(ergebnis);\n\nwindow.searchAddress = function searchAddress() {\n  var address = document.getElementById('addressInput').value;\n  // Direktes Setzen des API-Schlüssels, falls process.env.API_KEY nicht definiert ist\n  var apiKey = 'c592a3d99b8d43878cf7d727d44187ce';\n\n  var apiUrl = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(address)}&key=${apiKey}`;\n\n  fetch(apiUrl)\n    .then(response => response.json())\n    .then(data => {\n      if (data.results.length > 0) {\n        var location = data.results[0].geometry;\n        // Karte auf die gefundenen Koordinaten zentrieren\n        map.getView().setCenter(proj.fromLonLat([location.lng, location.lat]));\n        map.getView().setZoom(17); // Zoom-Level anpassen\n\n        // Temporären Marker hinzufügen\n        console.log (location.lng, location.lat);\n        addTempMarker([location.lng, location.lat]);\n      } else {\n        // Adresse nicht gefunden, Meldung ausgeben\n        alert('Adresse nicht gefunden');\n      }\n    })\n    .catch(error => {\n      console.error('Geokodierung-Fehler:', error);\n      removeTempMarker();\n    });\n}\n// Event-Listener für die Enter-Taste hinzufügen\nvar inputElement = document.getElementById('addressInput');\ninputElement.addEventListener('keydown', function (event) {\n  if (event.key === 'Enter') {\n    searchAddress();\n  }\n});\n// Marker für Positionsmarkierung zur Adresssuche\nfunction addTempMarker(coordinates) {\n  var tempMarkerLayer = new VectorLayer({\n    source: new VectorSource({\n      features: [new Feature({\n        geometry: new Point(coordinates),\n      })]\n    }),\n    style: new Style({\n      image: new CircleGeom({\n        radius: 20, // Radius des Kreises\n        fill: new Fill({ color: 'red' }), // Ändern Sie die Füllfarbe des Kreises auf Rot\n        stroke: new Stroke({ color: 'black', width: 2 }) // Randfarbe und -breite des Kreises bleiben unverändert\n      })\n    })\n  });\n\n  // Fügen Sie den temporären Marker-Layer zur Karte hinzu\n  map.addLayer(tempMarkerLayer);\n}\nfunction removeTempMarker() {\n  // Durchlaufen Sie alle Karten-Layer und entfernen Sie alle, die als temporärer Marker markiert sind\n  alert('xxmarker ');\n  map.getLayers().getArray().forEach(function (layer) {\n    if (layer.get('tempMarker')) {\n      map.removeLayer(layer);\n    }\n  });\n}\n\nconst attribution = new Attribution({\n  collapsible: false,\n});\n//attribution.element.className = 'ol-button'; // Füge die Klasse ol-button hinzu\n\nconst additionalControl = new ZoomToExtent({\n  extent: [\n    727361,  6839277, 858148,\n    6990951,\n  ],\n});\n//additionalControl.element.className = 'ol-button'; // Füge die Klasse ol-button hinzu\n\nconst mapView = new View({\n  center: proj.fromLonLat([7.35, 52.7]),\n  zoom: 9\n});\nconst map = new Map({\n  target: \"map\",\n  view: mapView,\n  controls: defaultControls().extend([attribution, additionalControl]),\n});\n\nconst source = new VectorSource();\nconst layerP = new VectorLayer({\n  source: source,\n  title: 'Position',\n  name: 'Position'\n});\n\n\n\nnavigator.geolocation.watchPosition(\n  function (pos) {\n    const coords = [pos.coords.longitude, pos.coords.latitude];\n    const accuracy = circular(coords, pos.coords.accuracy);\n    source.clear(true);\n    source.addFeatures([\n      new Feature(\n        accuracy.transform('EPSG:4326', map.getView().getProjection())\n      ),\n      new Feature(new Point(proj.fromLonLat(coords))),\n    ]);\n  },\n  function (error) {\n    alert(`ERROR: ${error.message}`);\n  },\n  {\n    enableHighAccuracy: true,\n  }\n);\n\nconst locate = document.createElement('div');\nlocate.className = 'ol-control ol-unselectable locate';\nlocate.innerHTML = '<button title=\"Locate me\">◎</button>';\nlocate.addEventListener('click', function () {\n  if (!source.isEmpty()) {\n    map.getView().fit(source.getExtent(), {\n      maxZoom: 18,\n      duration: 500,\n    });\n  }\n});\nmap.addControl(\n  new Control({\n    element: locate,\n  })\n);\n\n\n\n\n// Layer für Messung\n\nconst vectorM = new VectorLayer({\n  displayInLayerSwitcher: false,\n  source: new VectorSource(),\n  style: {\n    'fill-color': 'rgba(255, 255, 255, 0.2)',\n    'stroke-color': '#ffcc33',\n    'stroke-width': 2,\n    'circle-radius': 7,\n    'circle-fill-color': '#ffcc33',\n  },\n});\nlet sketch;\nlet helpTooltipElement;\nlet helpTooltip;\nlet measureTooltipElement;\nlet measureTooltip;\n\nconst gehoelz_vecLayer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/gehoelz_vec.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Gehölz(Plan)', // Titel für den Layer-Switcher\n  name: 'gehoelz_vec',\n  style: gehoelz_vecStyle,\n  visible: false\n});\nconst exp_allgm_fsk_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/exp_allgm_fsk.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'fsk',\n  name: 'fsk', \n  style: getStyleForArtFSK,\n  visible: false,\n  minResolution: 0,\n  maxResolution: 4\n})\nconst exp_bw_son_lin_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/exp_bw_son_lin.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }), \n  title: 'Sonstig, Linien', \n  name: 'son_lin',\n  style: son_linStyle,\n  visible: false\n});\nconst exp_gew_umn_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/exp_gew_umn.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'U-Maßnahmen', \n  name: 'gew_umn',\n  style: getStyleForArtUmn,\n  visible: false\n});\nconst exp_gew_info_layer = new VectorLayer({\n  source: new VectorSource({\n  format: new GeoJSON(),\n  url: function (extent) {return './myLayers/exp_gew_info.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Gew, Info', \n  name: 'gew_info',\n  style: combinedStyle,\n  visible: false\n});\n\nconst gew_layer_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/gew.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'gew', // Titel für den Layer-Switcher\n  name: 'gew',\n  style: new Style({\n    fill: new Fill({ color: 'rgba(0,28, 240, 0.4)' }),\n    stroke: new Stroke({ color: 'blue', width: 2 })\n  })\n})\n\nconst exp_bw_son_pun_layer = new VectorLayer({\n  source: new VectorSource({\n  format: new GeoJSON(),\n  url: function (extent) {return './myLayers/exp_bw_son_pun.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Sonstige, Punkte', \n  name: 'son_pun', \n  style: son_punStyle,\n  visible: false\n});\nconst exp_bw_ein_layer = new VectorLayer({\n  source: new VectorSource({\n  format: new GeoJSON(),\n  url: function (extent) {return './myLayers/exp_bw_ein.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Einläufe', \n  name: 'ein', \n  style: getStyleForArtEin,\n  visible: false\n});\nconst exp_bw_que_layer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n    url: function (extent) {\n      return './myLayers/exp_bw_que.geojson' + '?bbox=' + extent.join(',');\n    },\n    strategy: LoadingStrategy.bbox\n  }),\n  title: 'Querung', \n  name: 'que', // Titel für den Layer-Switcher\n  style: queStyle,\n  visible: false\n});\nconst exp_bw_due_layer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n    url: function (extent) {\n      return './myLayers/exp_bw_due.geojson' + '?bbox=' + extent.join(',');\n    },\n    strategy: LoadingStrategy.bbox\n  }),\n  title: 'Düker', // Titel für den Layer-Switcher\n  name: 'due', // Titel für den Layer-Switcher\n  style: dueStyle,\n  visible: false\n});\nconst exp_bw_weh_layer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n    url: function (extent) {\n      return './myLayers/exp_bw_weh.geojson' + '?bbox=' + extent.join(',');\n    },\n    strategy: LoadingStrategy.bbox\n  }),\n  title: 'Wehr', // Titel für den Layer-Switcher\n  name: 'weh', // Titel für den Layer-Switcher\n  style: wehStyle,\n  visible: false\n});\nconst exp_bw_bru_nlwkn_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/exp_bw_bru_nlwkn.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Brücke (NLWKN)', \n  name: 'bru_nlwkn', // Titel für den Layer-Switcher\n  style: bru_nlwknStyle,\n  visible: false\n});\nconst exp_bw_bru_andere_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/exp_bw_bru_andere.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'Brücke (andere)', \n  name: 'bru_andere', \n  style: bruAndereStyle,\n  visible: false\n});\nconst exp_bw_sle_layer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n    url: function (extent) {\n      return './myLayers/exp_bw_sle.geojson' + '?bbox=' + extent.join(',');\n    },\n    strategy: LoadingStrategy.bbox\n  }),\n  title: 'Schleuse', // Titel für den Layer-Switcher\n  name: 'sle', // Titel für den Layer-Switcher\n  style: sleStyle,\n  visible: true\n});\n\nconst km10scal_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/km_10_scal.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'km10scal', // Titel für den Layer-Switcher\n  style: km10scalStyle,\n  visible: true,\n  minResolution: 0,\n  maxResolution: 1 \n});\nconst km100scal_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/km_100_scal.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'km100scal', // Titel für den Layer-Switcher\n  style: function(feature, resolution) {\n    return km100scalStyle(feature, feature.get('TextString'), resolution);\n  },\n  visible: true,\n  minResolution: 0,\n  maxResolution: 3 \n});\nconst km500scal_layer = new VectorLayer({\n  source: new VectorSource({format: new GeoJSON(), url: function (extent) {return './myLayers/km_500_scal.geojson' + '?bbox=' + extent.join(','); }, strategy: LoadingStrategy.bbox }),\n  title: 'km500scal', // Titel für den Layer-Switcher\n  style: function(feature, resolution) {\n    return km500scalStyle(feature, feature.get('TextString'), resolution);\n  },\n  visible: true,\n  minResolution: 0,\n  maxResolution: 10 \n});\n\nconst wmsNsgLayer = new TileLayer({\n  title: \"NSG\",\n  name: \"NSG\",\n  source: new TileWMS({\n    url: 'https://www.umweltkarten-niedersachsen.de/arcgis/services/Natur_wms/MapServer/WMSServer',\n    params: {\n      'LAYERS': 'Naturschutzgebiet',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'TILED': true,\n    },\n  }),\n  visible: false,\n  opacity: .5,\n});\nconst wmsLsgLayer = new TileLayer({\n  title: \"LSG\",\n  name: \"LSG\",\n  source: new TileWMS({\n    url: 'https://www.umweltkarten-niedersachsen.de/arcgis/services/Natur_wms/MapServer/WMSServer',\n    params: {\n      'LAYERS': 'Landschaftsschutzgebiet',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'TILED': true,\n    },\n  }),\n  visible: false,\n  opacity: .5,\n});\nconst wmsUesgLayer = new TileLayer({\n  title: \"ÜSG\",\n  name: \"ÜSG\",\n  source: new TileWMS({\n    url:  'https://www.umweltkarten-niedersachsen.de/arcgis/services/HWSchutz_wms/MapServer/WMSServer',\n    params: {\n      'LAYERS': 'Überschwemmungsgebiete_Verordnungsfläechen_Niedersachsen11182',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'TILED': true,\n    },\n  }),\n  visible: false,\n  opacity: .5,\n});\nconst wmsWrrlFgLayer = new TileLayer({\n  title: \"Fließgew.\",\n  name: \"Fließgew.\",\n  source: new TileWMS({\n    url:  'https://www.umweltkarten-niedersachsen.de/arcgis/services/WRRL_wms/MapServer/WMSServer',\n    params: {\n      'LAYERS': 'Fliessgewaesser_WRRL',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'TILED': true,\n    },\n  }),\n  visible: false,\n  opacity: 1,\n});\nconst wmsGewWmsFgLayer = new TileLayer({\n  title: \"GewWms\",\n  name: \"GewWms\",\n  source: new TileWMS({\n    url:  'https://www.umweltkarten-niedersachsen.de/arcgis/services/Hydro_wms/MapServer/WMSServer',\n    params: {\n      'LAYERS': 'Gewässernetz',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'TILED': true,\n    },\n  }),\n  visible: false,\n  opacity: 1,\n});\n\nconst gnAtlas2023 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"10\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2023\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2020 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"9\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2020\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2017 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"8\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2017\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2014 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"7\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2014\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2012 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"6\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2012\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2010 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"5\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2010\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2009 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"4\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2009\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas2002 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"3\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"2002\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas1970 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"2\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"1970\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas1957 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"1\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"1957\",\n  opacity: 1.000000,\n  visible: false,\n});\nconst gnAtlas1937 = new TileLayer({\n  source: new TileWMS(({\n      url: \"https://geo.grafschaft.de/arcgis/services/Migratrion_Okt_2020/BAS_Luftbilder_2/MapServer/WMSServer\",\n      attributions: ' ',\n     params: {\"LAYERS\": \"0\", \"TILED\": \"true\", \"VERSION\": \"1.3.0\"},\n    })),\n  title: \"1937\",\n  opacity: 1.000000,\n  visible: false,\n});\n\nvar dop20ni_layer = new TileLayer({\n  title: \"DOP20 NI\",\n  opacity: 1.000000,\n  visible: false,\n  type: 'base',\n  source: new TileWMS({\n    url: \"https://www.geobasisdaten.niedersachsen.de/doorman/noauth/wms_ni_dop\",\n    attributions: 'Orthophotos Niedersachsen, LGLN',\n    params: {\n      \"LAYERS\": \"dop20\",\n      \"TILED\": true, // \"true\" sollte ohne Anführungszeichen sein\n      \"VERSION\": \"1.3.0\"\n    },\n  }),\n});\nconst googleLayer = new TileLayer({\n  title: \"GoogleSat\",\n  type: 'base',\n  baseLayer: false,\n  visible: false,\n  source: new TileImage({url: 'http://mt1.google.com/vt/lyrs=s&hl=pl&&x={x}&y={y}&z={z}' })\n});\nconst ESRIWorldImagery = new TileLayer({\n  title: 'ESRI',\n  type: 'base',\n  opacity: 1.000000,\n  visible: false,\n  source: new XYZ({\n      attributions: 'Powered by Esri',\n      url: 'https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n  })\n});\nconst osmTile = new TileLayer({\n  title: \"osm\",\n  type: 'base',\n  source: new OSM({\n      url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attributions: ['© OpenStreetMap contributors', 'Tiles courtesy of <a href=\"https://www.openstreetmap.org/\"></a>'],\n  }),\n});\n\nconst layerSwitcher = new LayerSwitcher({ });\nmap.addControl(layerSwitcher);\n\n// Funktionen für Messung\nconst pointerMoveHandler = function (evt) {\n  if (evt.pointerType === 'touch') {\n    if (evt.dragging) {\n       return;\n    }\n    let helpMsg = 'Click to start drawing';\n    if (sketch) {\n      const geom = sketch.getGeometry();\n      if (geom instanceof Polygon) {\n        helpMsg = 'Click to continue drawing the polygon';\n      } else if (geom instanceof LineString) {\n        helpMsg = 'Click to continue drawing the line';\n      }\n    }\n\n    if (helpTooltipElement) { // Überprüfen, ob helpTooltipElement definiert ist\n      helpTooltipElement.innerHTML = helpMsg; // Nur wenn helpTooltipElement definiert ist, setzen Sie innerHTML\n      helpTooltip.setPosition(evt.coordinate);\n      helpTooltipElement.classList.remove('hidden');\n    }\n  } else {\n    if (evt.dragging) {\n      return;\n    }\n    let helpMsg = 'Click to start drawing';\n    if (sketch) {\n      const geom = sketch.getGeometry();\n       if (geom instanceof Polygon) {\n         helpMsg = 'Click to continue drawing the polygon';\n      } else if (geom instanceof LineString) {\n         helpMsg = 'Click to continue drawing the line';\n      }\n    }\n    if (helpTooltipElement) { // Überprüfen, ob helpTooltipElement definiert ist\n    helpTooltipElement.innerHTML = helpMsg; // Nur wenn helpTooltipElement definiert ist, setzen Sie innerHTML\n    helpTooltip.setPosition(evt.coordinate);\n    helpTooltipElement.classList.remove('hidden');\n  }\n }  \n};\nmap.on('pointermove', pointerMoveHandler);\nlet draw;\nconst formatLength = function (line) {\n  const length = getLength(line);\n  let output;\n  if (length > 100) {\n    output = Math.round((length / 1000) * 100) / 100 + ' ' + 'km';\n  } else {\n    output = Math.round(length * 100) / 100 + ' ' + 'm';\n  }\n  return output;\n};\nconst formatArea = function (polygon) {\n  const area = getArea(polygon);\n  let output;\n  if (area > 10000) {\n    output = Math.round((area / 1000000) * 100) / 100 + ' ' + 'km<sup>2</sup>';\n  } else {\n    output = Math.round(area * 100) / 100 + ' ' + 'm<sup>2</sup>';\n  }\n  return output;\n};\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.2)',\n  }),\n  stroke: new Stroke({\n    color: 'rgba(0, 0, 0, 0.5)',\n    lineDash: [10, 10],\n    width: 2,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 0, 0.7)',\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.2)',\n    }),\n  }),\n});\nfunction addInteraction(type) {\n  draw = new Draw({\n    source: source,\n    type: type,\n    style: function (featureM) {\n      const geometryType = featureM.getGeometry().getType();\n      if (geometryType === type || geometryType === 'Point') {\n        return style;\n      }\n    },\n  });\n  map.addInteraction(draw);\n  createMeasureTooltip();\n  createHelpTooltip();\n  map.getViewport().addEventListener('mouseout', function () {\n    helpTooltipElement.classList.add('hidden');\n  });\n  \n  let listener;\n  draw.on('drawstart', function (evt) {\n    sketch = evt.featureM;\n    let tooltipCoord = evt.coordinate;\n    listener = sketch.getGeometry().on('change', function (evt) {\n      const geom = evt.target;\n      let output;\n      if (geom instanceof Polygon) {\n        output = formatArea(geom);\n        tooltipCoord = geom.getInteriorPoint().getCoordinates();\n      } else if (geom instanceof LineString) {\n        output = formatLength(geom);\n        tooltipCoord = geom.getLastCoordinate();\n      }\n      measureTooltipElement.innerHTML = output;\n      measureTooltip.setPosition(tooltipCoord);\n    });\n  });\n  draw.on('drawend', function () {\n    measureTooltipElement.className = 'ol-tooltip ol-tooltip-static';\n    measureTooltip.setOffset([0, -7]);\n    sketch = null;\n    measureTooltipElement = null;\n    createMeasureTooltip();\n    unByKey(listener);\n  });\n}\nfunction createHelpTooltip() {\n  if (helpTooltipElement) {\n    helpTooltipElement.parentNode.removeChild(helpTooltipElement);\n  }\n  helpTooltipElement = document.createElement('div');\n  helpTooltipElement.className = 'ol-tooltip hidden';\n  helpTooltip = new Overlay({\n    element: helpTooltipElement,\n    offset: [15, 0],\n    positioning: 'center-left',\n  });\n  map.addOverlay(helpTooltip);\n}\nfunction createMeasureTooltip() {\n  if (measureTooltipElement) {\n    measureTooltipElement.parentNode.removeChild(measureTooltipElement);\n  }\n  measureTooltipElement = document.createElement('div');\n  measureTooltipElement.className = 'ol-tooltip ol-tooltip-measure';\n  measureTooltip = new Overlay({\n    element: measureTooltipElement,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false,\n    insertFirst: false,\n  });\n  map.addOverlay(measureTooltip);\n}\n\nmap.getViewport().addEventListener('contextmenu', function(evt) {\n  evt.preventDefault(); // Verhindert das Standardkontextmenü\n  if (draw) {\n    console.log('beenden');\n    source.clear(); // Löscht alle Vektoren aus der Quelle\n    draw.finishDrawing(); // Beendet die laufende Messung\n    map.removeInteraction(draw); // Entfernt die Zeicheninteraktion\n    map.un('pointermove', pointerMoveHandler); // Entfernt den Event-Listener für 'pointermove'\n    map.removeOverlay(measureTooltip); // Entfernt das Messergebnis-Tooltip\n    map.removeOverlay(helpTooltip); // Entfernt das Help-Tooltip\n    return; // Beende die Funktion, um weitere Interaktionen zu verhindern\n  }\n});\n\n\n//Custom Controls 1 und 2\nclass CustomControls1 extends Control {\n  constructor(options) {\n    const element = document.createElement('div');\n    element.className = 'custom-controls1 ol-unselectable ol-control';\n    const buttonLength = document.createElement('button');\n    buttonLength.innerHTML = 'L';\n    buttonLength.className = 'ol-button';\n    buttonLength.addEventListener('click', function() {\n      console.log('länge gecklickt')\n      addInteraction('LineString');\n    });\n    const buttonArea = document.createElement('button');\n    buttonArea.innerHTML = 'F';\n    buttonArea.className = 'ol-button';\n    buttonArea.addEventListener('click', function() {\n      console.log('Fläche gecklickt')\n      addInteraction('Polygon');\n    });\n    element.appendChild(buttonLength);\n    element.appendChild(buttonArea);\n\n    super({\n      element: element,\n      target: options.target,\n    });\n  }\n}\nmap.addControl(new CustomControls1({\n  target: 'custom-controls'\n}));\n\n\nclass CustomControls2 extends Control {\n  constructor(options) {\n    const element = document.createElement('div');\n    element.className = 'custom-controls2 ol-unselectable ol-control';\n    const buttonPosition = document.createElement('button');\n    buttonPosition.innerHTML = 'P';\n    buttonPosition.className = 'ol-button';\n\n    // Event-Listener für Position\n    buttonPosition.addEventListener('click', function() {\n      console.log('Position geklickt');\n    });\n\n    element.appendChild(buttonPosition);\n    super({\n      element: element,\n      target: options.target,\n    });\n  }\n}\nmap.addControl(new CustomControls2({\n  target: 'custom-controls'\n}));\n\n\nconst BwGroupP = new LayerGroup({\n  title: \"Bauw.(P)\",\n  fold: true,\n  fold: 'close',  \n  layers: [ exp_bw_son_pun_layer, exp_bw_ein_layer, exp_bw_bru_andere_layer, exp_bw_bru_nlwkn_layer, exp_bw_que_layer, exp_bw_due_layer, exp_bw_weh_layer, exp_bw_sle_layer]\n});\nconst BwGroupL = new LayerGroup({\n  title: \"Bauw.(L)\",\n  fold: true,\n  fold: 'close',  \n  layers: [ gehoelz_vecLayer, exp_gew_umn_layer, exp_bw_son_lin_layer, exp_gew_info_layer ]\n});\nconst wmsLayerGroup = new LayerGroup({\n  title: \"WMS-Lay\",\n  name: \"WMS-Lay\",\n  fold: true,\n  fold: 'close',\n  layers: [ wmsLsgLayer, wmsNsgLayer, wmsUesgLayer, wmsWrrlFgLayer, wmsGewWmsFgLayer ]\n});\nconst GNAtlasGroup = new LayerGroup({\n  title: \"GN-DOP's\",\n  fold: true,\n  fold: 'close',\n  layers: [ gnAtlas2023, gnAtlas2020, gnAtlas2017, gnAtlas2014, gnAtlas2012, gnAtlas2010, gnAtlas2009, gnAtlas2002, gnAtlas1970, gnAtlas1957, gnAtlas1937]\n});\nconst kmGroup = new LayerGroup({\n  title: \"Station\",\n  fold: true,\n  fold: 'close',\n  layers: [km10scal_layer, km100scal_layer, km500scal_layer]\n});\nconst BaseGroup = new LayerGroup({\n  title: \"Base\",\n  fold: true,\n  fold: 'close',\n  layers: [ESRIWorldImagery, googleLayer, dop20ni_layer, osmTile]\n});\n\nmap.addLayer(BaseGroup);\nmap.addLayer(GNAtlasGroup);\nmap.addLayer (exp_allgm_fsk_layer);\nmap.addLayer(gew_layer_layer);\nmap.addLayer(wmsLayerGroup);\nmap.addLayer(kmGroup);\nmap.addLayer(BwGroupL);\nmap.addLayer(BwGroupP);\nmap.addLayer(vectorM); \n\n\n//Info für WMS-Layer\nmap.on('singleclick', function (evt) {\n  const isWmsLayerGroupVisible = map.getLayers().getArray().some(layer => layer.get('name') === 'WMS-Lay' && layer.getVisible());\n  \n  if (isWmsLayerGroupVisible) {\n    const layersToCheck = [\n      { layer: wmsGewWmsFgLayer, name: 'GewWms' },\n      { layer: wmsWrrlFgLayer, name: 'WRRL' },\n      { layer: wmsUesgLayer, name: 'ÜSG' },\n      { layer: wmsNsgLayer, name: 'NSG' },\n      { layer: wmsLsgLayer, name: 'LSG' },\n    ];\n\n    const viewResolution = map.getView().getResolution();\n    const viewProjection = map.getView().getProjection();\n\n    layersToCheck.forEach(({ layer, name }) => {\n      if (layer.getVisible()) {\n        const url = layer.getSource().getFeatureInfoUrl(evt.coordinate, viewResolution, viewProjection, {'INFO_FORMAT': 'text/html'});\n        if (url) {\n          fetch(url)\n            .then((response) => response.text())\n            .then((html) => {\n              if (html.trim() !== '') {\n                removeExistingInfoDiv();\n                const infoDiv = createInfoDiv(name, html);\n                document.body.appendChild(infoDiv);\n              }\n            })\n            .catch((error) => {\n              console.error('Fehler beim Abrufen der Informationen:', error);\n            });\n        }\n      }\n    });\n  } else {\n    console.log('Die wmsLayerGroup ist nicht eingeschaltet.');\n  }\n});\nfunction createInfoDiv(name, html) {\n  const infoDiv = document.createElement('div');\n  infoDiv.id = 'info';\n  infoDiv.classList.add('info-container');\n  infoDiv.innerHTML = `<strong>${name} Layer</strong><br>${html}`;\n\n  const closeIcon = document.createElement('span');\n  closeIcon.innerHTML = '&times;';\n  closeIcon.classList.add('close-icon');\n  closeIcon.addEventListener('click', function () {\n    infoDiv.style.display = 'none';\n  });\n\n  infoDiv.appendChild(closeIcon);\n  return infoDiv;\n}\nfunction removeExistingInfoDiv() {\n  const existingInfoDiv = document.getElementById('info');\n  if (existingInfoDiv) { existingInfoDiv.remove(); }\n}\n\n\n// Funktionen für Popup\nvar container = document.getElementById('popup');\nvar content = document.getElementById('popup-content');\nvar closer = document.getElementById('popup-closer');\nvar popup = new Overlay({\n  element: container,//document.getElementById('popup'),\n  id: '1',\n  autoPan: true,\n  autoPanAnimation: {\n  duration: 250\n  }\n});\nmap.addOverlay(popup);\ncloser.onclick = function()\n{\n  popup.setPosition(undefined);\n  closer.blur();\n  return false;\n};\nvar closer = document.getElementById('popup-closer');\nmap.on('click', function (evt) {\n  var feature = map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n    /* Neu\n    var txtName = feature.get('name');\n    var txtPopupCloser = document.getElementById('popup-closer');\n    txtPopupCloser.innerHTML = (txtName);\n    */\n    console.log ('feature gefunden')\n    var layname = layer.get('name');\n    var coordinates = evt.coordinates;\n    var beschreibLangValue = feature.get('beschreib_lang');\n    var beschreibLangHtml = '';\n    if (beschreibLangValue && beschreibLangValue.trim() !== '') {\n    beschreibLangHtml = '<br>' + '<u>' + \"Beschreib (lang): \" + '</u>' + beschreibLangValue + '</p>';\n    };\n    // Popup soll nur für bestimmte Layernamen angezeigt werden\n    if (layname !== 'gew' && layname !== 'km10scal' && layname !== 'km100scal' && layname !== 'km500scal' && layname !== 'fsk' && layname !== 'son_lin') {\n      console.log('Clicked on layer:', layname);\n      machWasMitFSK(feature);\n      if (feature) {\n        coordinates = feature.getGeometry().getCoordinates();\n        popup.setPosition(coordinates);\n        // HTML-Tag Foto1\n        var foto1Value = feature.get('foto1');\n        var foto1Html = '';\n        var foto2Value = feature.get('foto2');\n        var foto2Html = '';\n        var foto3Value = feature.get('foto3');\n        var foto3Html = '';\n        var foto4Value = feature.get('foto4');\n        var foto4Html = '';\n        \n        if (foto1Value && foto1Value.trim() !== '') {\n          foto1Html = '<a href=\"' + foto1Value + '\" onclick=\"window.open(\\'' + foto1Value + '\\', \\'_blank\\'); return false;\">Foto 1</a>';\n        } else {\n          foto1Html =   \" Foto 1 \";\n        }\n        if (foto2Value && foto2Value.trim() !== '') {\n          foto2Html = '<a href=\"' + foto2Value + '\" onclick=\"window.open(\\'' + foto2Value + '\\', \\'_blank\\'); return false;\">Foto 2</a>';\n        } else {\n          foto2Html = \" Foto 2 \";\n        }\n        if (foto3Value && foto3Value.trim() !== '') {\n          foto3Html = '<a href=\"' + foto3Value + '\" onclick=\"window.open(\\'' + foto3Value + '\\', \\'_blank\\'); return false;\">Foto 3</a>';\n        } else {\n          foto3Html = \" Foto 3 \";\n        }\n        if (foto4Value && foto4Value.trim() !== '') {\n          foto4Html = '<a href=\"' + foto4Value + '\" onclick=\"window.open(\\'' + foto4Value + '\\', \\'_blank\\'); return false;\">Foto 4</a>';\n        } else {\n          foto4Html = \" Foto 4 \";\n        }\n      \n        content.innerHTML =\n          '<div style=\"max-height: 200px; overflow-y: auto;\">' +\n          '<p style=\"font-weight: bold; text-decoration: underline;\">' + feature.get('name') + '</p>' +\n          '<p>' + \"Id = \" + feature.get('bw_id') +  ' (' + feature.get('KTR') +')' +  '</p>' +\n          '<p>' + foto1Html + \" \" + foto2Html + \" \" + foto3Html + \" \" + foto4Html + \n           '<br>' + '<u>' + \"Beschreibung (kurz): \" + '</u>' + feature.get('beschreib') + '</p>' +\n           '<p>' + beschreibLangHtml + '</p>' +\n          '</div>';\n      \n        \n      } else {\n        popup.setPosition(undefined);\n      }\n    }\n    // Führen Sie Aktionen für den Layernamen 'gew_info' durch\n    if (layname === 'gew_info') {\n      coordinates = evt.coordinate; \n      popup.setPosition(coordinates);\n      content.innerHTML =\n      '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n      '<p>Name: ' + feature.get('IDUabschn') + '<br>' +\n      '<p><a href=\"' + feature.get('link1') + '\" onclick=\"window.open(\\'' + feature.get('link1') + '\\', \\'_blank\\'); return false;\">Link 1</a> ' +\n      '<a href=\"' + feature.get('link2') + '\" onclick=\"window.open(\\'' + feature.get('link2') + '\\', \\'_blank\\'); return false;\">Link 2</a> ' +\n      '<a href=\"' + feature.get('foto1') + '\" onclick=\"window.open(\\'' + feature.get('foto1') + '\\', \\'_blank\\'); return false;\">Foto 1</a> ' +\n      '<a href=\"' + feature.get('foto2') + '\" onclick=\"window.open(\\'' + feature.get('foto2') + '\\', \\'_blank\\'); return false;\">Foto 2</a><br>' +\n      '<p><a href=\"' + feature.get('BSB') + '\" onclick=\"window.open(\\'' + feature.get('BSB') + '\\', \\'_blank\\'); return false;\">BSB  </a>' +\n      '<a href=\"' + feature.get('MNB') + '\" onclick=\"window.open(\\'' + feature.get('MNB') + '\\', \\'_blank\\'); return false;\">MNB</a><br> ' +\n      'Kat: ' + feature.get('Kat') + '</a>' +\n      ', KTR: ' + feature.get('REFID_KTR') + '</a>' +\n      '<br>' + \"von \" + feature.get('Bez_Anfang') + \" bis \" + feature.get('Bez_Ende')  + '</p>' +\n      '</div>';\n    }\n    // Führen Sie Aktionen für den Layernamen 'gew_umn' durch\n    if (layname === 'gew_umn') {\n      coordinates = evt.coordinate; \n      popup.setPosition(coordinates);\n      content.innerHTML =\n      \n      '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n      '<p>ID: ' + feature.get('Massn_ID') + '<br>' +\n      '<p>Bez (Art): ' + feature.get('UMnArtBez') + '<br>' +\n      '<p>Bez (Gruppe): ' + feature.get('UMNGrBez') + '<br>' +\n      '</div>';\n    }\n    // Führen Sie Aktionen für den Layernamen 'son_lin' durch\n    if (layname === 'son_lin') {\n      coordinates = evt.coordinate; \n      popup.setPosition(coordinates);\n      content.innerHTML =\n      '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n      '<p>Name: ' + feature.get('name') +  ' (' + feature.get('KTR') +')' + '<br>' +\n      '<p><a href=\"' + feature.get('foto1') + '\" onclick=\"window.open(\\'' + feature.get('foto1') + '\\', \\'_blank\\'); return false;\">Foto 1</a> ' +\n      '<a href=\"' + feature.get('foto2') + '\" onclick=\"window.open(\\'' + feature.get('foto2') + '\\', \\'_blank\\'); return false;\">Foto 2</a> ' +\n      '<a href=\"' + feature.get('foto3') + '\" onclick=\"window.open(\\'' + feature.get('foto3') + '\\', \\'_blank\\'); return false;\">Foto 3</a> ' +\n      '<a href=\"' + feature.get('foto4') + '\" onclick=\"window.open(\\'' + feature.get('foto4') + '\\', \\'_blank\\'); return false;\">Foto 4</a></p>' +\n      '<br>' + \"Beschreib kurz = \" + feature.get('beschreib') + '</p>' +\n      beschreibLangHtml +\n      '</div>';\n    }\n    // Führen Sie Aktionen für den Layernamen 'gehoelz_vecLayer' durch\n    if (layname === 'gehoelz_vec') {\n      coordinates = evt.coordinate; \n      popup.setPosition(coordinates);\n      content.innerHTML =\n      '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n      '<p>Gehölzentwicklung' + '<br>' +\n      '<br>' + \"Bemerk: \" + feature.get('UMn_Bemerk') + '</p>' +\n      '</div>';\n    }\n    // Führen Sie Aktionen für den Layernamen 'fsk' durch\n    if (layname === 'fsk') {\n      if (feature.get('Art') === 'o' || feature.get('Art') === 'l') {\n        coordinates = evt.coordinate; // Define coordinates for 'fsk'\n        popup.setPosition(coordinates);\n        content.innerHTML =\n          '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n          '<p><strong>gemark Flur Flurstück:</strong><br>' + feature.get('Suche') + '</p>' +\n          'FSK: ' + feature.get('fsk') + '</p>' +\n          'FSK(ASL): ' + feature.get('FSK_ASL') + '</p>' +\n          '<p>' + 'Eig.(öffentl.): ' + feature.get('Eig1') + '</p>' +\n          '</div>';\n      } else {\n        coordinates = evt.coordinate; // Define coordinates for 'fsk'\n        popup.setPosition(coordinates);\n        content.innerHTML =\n          '<div style=\"max-height: 300px; overflow-y: auto;\">' +\n          '<p><strong>gemark Flur Flurstück:</strong><br>' + feature.get('Suche') + '</p>' +\n          'FSK: ' + feature.get('fsk') + '</p>' +\n          '<p>' + 'Art (p=privat): ' + feature.get('Art') + '</p>' +\n           '<p>' + 'Eig.(privat): ' + feature.get('Eig1') + '</p>' +\n          '</div>';\n      }\n    }\n  });\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  var popup = document.getElementById('popup');\n  var popupCloser = document.getElementById('popup-closer');\n  var container = document.createElement('div');\n  var link = document.createElement('a');\n  link.textContent = 'Weitere Infos';\n\n  link.href = '#'; // Verhindert, dass der Link die Seite neu lädt\n  link.addEventListener('click', function(event) {\n    event.preventDefault(); // Verhindert die Standardaktion des Links\n    var newWindow = window.open('', '_blank');\n    newWindow.document.body.innerHTML = '<p>Hallo neue Welt</p>';\n  });\n  \n  container.appendChild(link);\n  container.appendChild(popupCloser);\n  popup.appendChild(container);\n});\ndocument.getElementById('popup-closer').onclick = function () {\n  popup.setPosition(undefined);\n  return false;\n};\n\nmap.addLayer(layerP);"],"names":["BaseEvent","type","ObjectEventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","LayerProperty","assert","assertion","errorMessage","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","floor","ceil","BaseLayer","properties","managed","state","zIndex","states","background","extent","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","RenderEventType","ViewHint","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","resolution","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projectionExtent","worldWidth","wrapAndSliceX","compareVersions","v1","v2","s1","s2","n1","n2","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","getLength","geometry","coords","jj","geometries","getAreaInternal","bearing","lon1","dByR","lat","lon","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","width","height","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","tmp_","create","reset","set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","setFromArray","apply","makeScale","translate","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","matrixPrecision","toString","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","Point","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","circular","sphereRadius","sphereOffset","fromExtent","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Layer","baseOptions","pixel","view","frameState","map","layerState","layerExtent","inView","getAttributions","attributions","layerRenderer","layerStatesArray","arrayLayerState","viewState","quickselect","left","quickselectStep","defaultCompare","s","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","node","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","children","ImageState","hasArea","toSize","ImageStyle","pixelRatio","displacement","rotateWithView","rgb","xyz","_xyz","white","g","luv","arg","o","_u","_v","u","v","xn","yn","zn","un","vn","yr","lchuv","hr","colorName","baseHues","parse","cstr","parts","alpha","space","names","base","isShort","name","dims","_b","_a","hsl","t1","t2","t3","rgba","color","parsed","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","ua","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","outerWidth","style","outerHeight","replaceNode","oldNode","removeNode","removeChildren","replaceChildren","oldChildren","oldChild","newChild","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","colorString","shared","taintedTestContext","IconImage","imageState","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","label","contextInstructions","RegularShape","fill","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","CircleStyle$1","Fill","patternImage","Stroke","Stroke$1","Style","defaultGeometryFunction","renderer","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","blue","Style$1","calculateScale","wantedWidth","wantedHeight","Icon","onload","imageSize","iconImageSize","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","textAlign","justify","textBaseline","Text$1","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","getTypeFromHint","typeHint","encoded","parseCallExpression","Ops","parsers","createParser","_","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","needleType","colors","parsedColors","returnType","argValidators","actualType","parser","computeGeometryType","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","id","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","declutterMode","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","BaseVectorLayer","declutterGroup","RBush","renderOrder","toStyleLike","toStyleFunction","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","layer","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","container","renderedLayerStates","previousElement","sourceState","GroupEvent","LayerGroup","layers","layersArray","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileState","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","visibleAttributions","collapsible","collapsed","Rotate","compassClassName","button","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","Zoom$1","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","all","conditions","pass","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","mouseActionButton","never","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragPan$1","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","DragZoom$1","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","KeyboardZoom$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","applyTransform","group","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Map$1","Feature","geometryOrProperties","createStyleFunction","Feature$1","circleExtent","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","GeometryCollection$1","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","LineString$1","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","MultiPoint","multiPoint","MultiPoint$1","MultiPolygon","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","RenderFeature","FeatureFormat","dataProjection","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","fromProjection","toProjection","GeometryConstructor","orientFlatCoordinates","createRenderFeature","geometryType","createGeometry","JSONFeature","getObject","GeoJSON","geoJSONFeature","readGeometryInternal","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","featureObject","readGeometry","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geometryObject","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","positioning","mapSize","posX","posY","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","Builder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","tiles","tileRange","ZIndexContext","__publicField","instructionsAtIndex","instructionAtIndex","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","render","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","requireClip","zIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","localTransform","close","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","declutter","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","vectorSource","endWorld","world","compositionContext","canvasTransform","transformToString","clipped","intersectsExtent","getSquaredRenderTolerance","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","VectorLayer","VectorLayer$1","RBush_","extents","uid","rbush","Source","adaptAttributions","self","attributionLike","VectorEventType","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","ring","sharedRel","py","Draw","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","move","lowerLeft","upperRight","previouslyForward","currentlyForward","fromIndex","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","LRUCache","highWaterMark","entry","Tile","tileCoord","ImageTile","tileLoadFunction","getBlankImage","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","getKeyZXY","getKey","fromKey","hash","withinExtentAndZ","TileCache","usedTiles","TileEventType","TileRange","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","tileSize","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","TileGrid$1","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","covered","tileCoordKey","getTileGridForProjection","tilePixelRatio","scaleSize","tileCount","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","charCode","UrlTile","tileState","tileUrlFunction","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","XYZ","appendParams","uri","params","keyParams","qs","DEFAULT_VERSION","getRequestUrl","baseUrl","v13","getImageSrc","serverType","imageResolution","dpi","getRequestParams","request","ATTRIBUTION","OSM","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","toTransformString","dw","dh","ImageLayer","ol_layer_Image","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","tileCallback","wantedTiles","TileLayer","TileLayer$1","TileWMS","transparent","projectionObj","sourceProjectionObj","sourceProjCoord","tileExtent","baseParams","mpu","pixelSize","version","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","attributes","BufferUsage","WebGLArrayBuffer","usage","getArrayClassForType","ContextEventType","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","gl","vertexShader","fragmentShader","verticesArray","textureSize","internalFormat","border","nextPass","preCompose","postCompose","canvasId","textureSlot","uniform","fromTransform","mat4","DefaultUniform","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getOrCreateContext","cacheItem","WebGLHelper","uniforms","canvasCacheKey","bufferKey","bufferCache","webGlBuffer","buf","bufferCacheEntry","disableAlphaBlend","enableDepth","texture","slot","uniformName","renderTarget","elementType","elementSize","numItems","offsetInBytes","loc","imageReady","program","shader","fragmentShaderSource","vertexShaderSource","message","programUid","attribName","location","computeAttributesStride","attr","getByteSizeFromType","WebGLLayerRenderer","incrementGroup","groupNumber","tmpArray4","WebGLRenderTarget","helper","WebGLWorkerMessageType","earcutModule","earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","indexCurve","next","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","queue","list","getLeftmost","compareX","eliminateHole","hole","bridge","findHoleBridge","bridgeReverse","hx","hy","qx","mx","my","tanMin","tan","sectorContainsSector","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","inside","Node","an","bp","polygonArea","trianglesArea","sum","holeIndex","LINESTRING_ANGLE_COSINE_CUTOFF","colorEncodeId","radix","divide","colorDecodeId","mult","getWorldParameters","WebGLPointsLayerRenderer","projectionMatrixTransform","customAttributes","attribute","createWebGLWorker","received","projectionTransform","makeInverseTransform","startWorld","viewNotMoving","extentChanged","sourceChanged","BaseVector","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","hitColor","forHitDetection","translateTransform","multiplyTransform","renderCount","numberToGlsl","arrayToGlsl","colorToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","varying","DEFAULT_GRADIENT","Heatmap","weight","createGradient","blur","builder","gradient","ol_layer_Heatmap","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","hifi","layerRevision","builderState","sourceTiles","layerUid","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","renderedTiles","tilePixel","accumulator","hitDetectionImageData","executorGroupZIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","clipContext","replayState","renderPixelRatio","renderScale","resetTransform","scaleTransform","pixelScale","VectorTileLayer","ol_layer_VectorTile","ZoomToExtent","ol_ext_input_Base","ol_Object","tout","elt","cback","handle","ol_ext_input_Checkbox","ol_ext_input_Switch","ol_ext_input_Radio","ol_ext_element","opt","html","useCapture","el","st","styleProp","defaultView","str","letter","oldLeft","oldRsLeft","rect","getOffset","fixed","gleft","gtop","getRect","speed","dt","onmove","page","scroll","moving","isbar","updateCounter","updateMinibar","scrollbar","updateMinibarDelay","pheight","scrollContainer","onPointerDown","onPointerMove","onPointerUp","animate","to","init","onMouseWheel","eventName","ol_control_LayerSwitcher","ol_control_Control","mbar","ol_Observable_unByKey","dir","hp","top","li","lh","scrollTop","ex0","ex","ol_extent_intersects","panel","pageY","pageY0","dragElt","drop","isSelected","ul","setVisibility","onInfo","zoomExtent","removeLayer","createLi","layer_buttons","nb","ol_layer_Tile","ul2","ol_layer_Vector","draw","sleStyle","wehStyle","bru_nlwknStyle","bruAndereStyle","dueStyle","queStyle","son_punStyle","km10scalStyle","gehoelz_vecStyle","son_linStyle","getStyleForArtEin","artValue","iconSrc","machWasMitFSK","getStyleForArtFSK","fillColor","strokeColor","getStyleForArtUmn","mnIdValue","km100scalStyle","km500scalStyle","arrowStyle","endpointStyle","combinedStyle","calcSumme","summe","ergebnis","address","apiKey","apiUrl","response","proj.fromLonLat","addTempMarker","removeTempMarker","inputElement","tempMarkerLayer","attribution","additionalControl","mapView","layerP","accuracy","locate","vectorM","sketch","helpTooltipElement","helpTooltip","measureTooltipElement","measureTooltip","gehoelz_vecLayer","LoadingStrategy.bbox","exp_allgm_fsk_layer","exp_bw_son_lin_layer","exp_gew_umn_layer","exp_gew_info_layer","gew_layer_layer","exp_bw_son_pun_layer","exp_bw_ein_layer","exp_bw_que_layer","exp_bw_due_layer","exp_bw_weh_layer","exp_bw_bru_nlwkn_layer","exp_bw_bru_andere_layer","exp_bw_sle_layer","km10scal_layer","km100scal_layer","km500scal_layer","wmsNsgLayer","wmsLsgLayer","wmsUesgLayer","wmsWrrlFgLayer","wmsGewWmsFgLayer","gnAtlas2023","gnAtlas2020","gnAtlas2017","gnAtlas2014","gnAtlas2012","gnAtlas2010","gnAtlas2009","gnAtlas2002","gnAtlas1970","gnAtlas1957","gnAtlas1937","dop20ni_layer","googleLayer","ESRIWorldImagery","osmTile","layerSwitcher","LayerSwitcher","pointerMoveHandler","helpMsg","geom","formatLength","formatArea","addInteraction","featureM","createMeasureTooltip","createHelpTooltip","tooltipCoord","CustomControls1","buttonLength","buttonArea","CustomControls2","buttonPosition","BwGroupP","BwGroupL","wmsLayerGroup","GNAtlasGroup","kmGroup","BaseGroup","layersToCheck","viewProjection","removeExistingInfoDiv","infoDiv","createInfoDiv","closeIcon","existingInfoDiv","content","closer","popup","layname","beschreibLangValue","beschreibLangHtml","foto1Value","foto1Html","foto2Value","foto2Html","foto3Value","foto3Html","foto4Value","foto4Html","popupCloser","link","newWindow"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229]}